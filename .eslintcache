[{"/Users/user/Documents/Projets/authentication/src/App.js":"1","/Users/user/Documents/Projets/authentication/src/reportWebVitals.js":"2","/Users/user/Documents/Projets/authentication/src/Components/Themes.js":"3","/Users/user/Documents/Projets/authentication/src/Components/GlobalStyle.js":"4","/Users/user/Documents/Projets/authentication/src/Signin.js":"5","/Users/user/Documents/Projets/authentication/src/Signup.js":"6","/Users/user/Documents/Projets/authentication/src/index.js":"7","/Users/user/Documents/Projets/authentication/src/Components/Input.js":"8"},{"size":3845,"mtime":1611953273474,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611840437628,"results":"11","hashOfConfig":"10"},{"size":535,"mtime":1611858789074,"results":"12","hashOfConfig":"10"},{"size":812,"mtime":1611950440440,"results":"13","hashOfConfig":"10"},{"size":1434,"mtime":1612000926039,"results":"14","hashOfConfig":"10"},{"size":3443,"mtime":1612000390227,"results":"15","hashOfConfig":"10"},{"size":500,"mtime":1611840437627,"results":"16","hashOfConfig":"10"},{"size":1692,"mtime":1612000782359,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"be05lw",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Documents/Projets/authentication/src/App.js",["37","38"],"import React, { useState } from \"react\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Components/GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./Components/Themes\"\n\nimport Signin from './Signin'\nimport Signup from './Signup'\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  ${'' /* height: 50px; */}\n  box-shadow: none;\n  padding: 0 10px\n`;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: calc(100vh - 50px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: none;\n  position: relative;\n  overflow-x: hidden;\n`;\n\nconst Toggle = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nconst ModuleContainer = styled.div`\n  ${'' /* width: 50vw; */}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: none;\n`;\n\nconst Button = styled.button`\n  margin-top: 15px;\n`;\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [connectDisplay, setConnectDisplay] = useState('signin')\n  const [registeredUser, setRegisteredUser] = useState({\n    email: '',\n    password: ''\n  })\n\n  const emailRegex = /^[a-zA-Z0-9.-]{2,20}@([a-zA-Z0-9]{2,15})+(\\.[a-zA-Z]{2,3})+((\\.[a-zA-Z]{2,3})?)+$/\n  const passwordRegex = /^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&^*])(?!.*[\\s])(?!.*[<>]).*$/\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  const handleConnectDisplayChange = () =>Â {\n    connectDisplay === 'signin' \n    ? setConnectDisplay('signup')\n    : setConnectDisplay('signin') \n  }\n\n  const checkInputValidity = (regex, input) => {\n    return regex.test(input);\n  }\n\n  const checkPasswordConformity = (password1, password2) => {\n    if(checkInputValidity(passwordRegex, password1)){\n      if(password1 === password2){\n        return true\n      }else{\n        return false\n      }\n    }else{\n      return false\n    }\n  }\n\n  const registerUser = (email, password) =>{\n    setRegisteredUser({\n      email: email,\n      password: password\n    })\n  }\n\n  const handleOnSubmitSignup = (email, password1, password2) => {\n    if(checkPasswordConformity(password1, password2) && checkInputValidity(emailRegex, email)){\n      registerUser(email, password2)\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  const handleOnSubmitSignin = (email, password) => {\n    if(checkInputValidity(passwordRegex, password) && checkInputValidity(emailRegex, email)){\n      if(email === registeredUser.email && password === registeredUser.password){\n        console.log('Nice, you are logged in')\n      }else{\n        console.log('It seems your email or password do not match what we have on database');\n      }\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  return (\n     <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <GlobalStyles/>\n        <Header>\n          <button onClick={themeToggler}>Switch Theme</button>\n        </Header>\n        <Container>\n          <ModuleContainer>\n            <Signin \n              handleOnSubmitSignin={handleOnSubmitSignin} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signin' ? true : false}\n            />\n            <Signup \n              registerUser={registerUser} \n              handleOnSubmitSignup={handleOnSubmitSignup} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signup' ? true : false}\n            />\n          </ModuleContainer>\n        </Container>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",["39","40"],"/Users/user/Documents/Projets/authentication/src/reportWebVitals.js",[],["41","42"],"/Users/user/Documents/Projets/authentication/src/Components/Themes.js",[],"/Users/user/Documents/Projets/authentication/src/Components/GlobalStyle.js",[],"/Users/user/Documents/Projets/authentication/src/Signin.js",[],"/Users/user/Documents/Projets/authentication/src/Signup.js",[],"/Users/user/Documents/Projets/authentication/src/index.js",[],"/Users/user/Documents/Projets/authentication/src/Components/Input.js",[],{"ruleId":"43","severity":1,"message":"44","line":31,"column":7,"nodeType":"45","messageId":"46","endLine":31,"endColumn":13},{"ruleId":"43","severity":1,"message":"47","line":45,"column":7,"nodeType":"45","messageId":"46","endLine":45,"endColumn":13},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},"no-unused-vars","'Toggle' is assigned a value but never used.","Identifier","unusedVar","'Button' is assigned a value but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"no-global-assign","no-unsafe-negation"]