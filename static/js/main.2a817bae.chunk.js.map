{"version":3,"sources":["Components/GlobalStyle.js","Components/Themes.js","Components/HelpBox.js","images/eye-solid.svg","images/eye-closed-solid.svg","Components/Input.js","Components/Title.js","Components/LoginError.js","images/chevron-right-black.svg","images/chevron-right-white.svg","Signin.js","Components/SignupError.js","images/chevron-left-black.svg","images/chevron-left-white.svg","Signup.js","WelcomePage.js","images/cloud-moon-solid.svg","images/sun-solid.svg","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","primary","secondary","text","tertiary","link","border","navButton_shadow","underline","main_shadow","error_text","lightTheme","darkTheme","Container","styled","div","List","ul","HelpBox","type","conditions","className","hasEnoughCharacter","hasOneUpperCase","hasOneLowerCase","hasOneDigit","hasOneSpecialCharacter","containsNoSpace","InputBox","input","props","Img","img","Underline","span","Input","originalType","placeholder","value","emailRegex","passwordRegex","inputPurpose","password1","onChangeInput","useState","isPasswordVisible","setIsPasswordVisible","inputType","setInputType","displayHelpbox","setDisplayHelpbox","passwordConditions","setPasswordConditions","enoughCharacterRegex","oneUpperCaseRegex","oneLowerCaseRegex","oneDigitRegex","oneSpecialRegex","containsSpaceRegex","onChange","test","prevState","setHelpBox","setHelpboxVisibility","autoComplete","target","onClick","src","eye","eye_closed","alt","Text","h2","Title","active","LoginError","Wrapper","PasswordLink","a","SubmitButton","button","ToSignUp","RightArrow","ButtonText","p","Signin","handleConnectDisplayChange","handleOnSubmitSignin","loginErrorVisible","setLoginErrorVisible","email","setEmail","password","setPassword","emailBorder","setEmailBorder","password1Border","setPassword1Border","handleOnChangeInput","regex","saveInput","setBorder","href","arrow_right_black","arrow_right_white","SignupError","ToSignIn","LeftArrow","Signup","handleOnSubmitSignup","signupErrorVisible","setSignupErrorVisible","setPassword1","password2","setPassword2","password2Border","setPassword2Border","arrow_left_black","arrow_left_white","MainTitle","h1","LogoutButton","WelcomePage","pageToggler","ConnectionPage","ModuleContainer","ThemeToggler","Footer","App","setTheme","connectDisplay","setConnectDisplay","registeredUser","setRegisteredUser","isConnectionPageActive","setConnectionPageActive","isWelcomePageActive","setWelcomePageActive","checkInputValidity","moon","sun","checkPasswordConformity","registerUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"inDACO,IAAMA,EAAeC,YAAH,KAMP,qBAAGC,MAAkBC,WAC1B,qBAAGD,MAAkBE,aAMrB,qBAAGF,MAAkBG,QAKrB,qBAAGH,MAAkBG,QAKV,qBAAGH,MAAkBI,YAChC,qBAAGJ,MAAkBG,QAGnB,qBAAGH,MAAkBG,QAKvB,qBAAGH,MAAkBK,QAGnB,qBAAGL,MAAkBK,QAKvB,qBAAGL,MAAkBG,QACpB,qBAAGH,MAAkBM,UACX,qBAAGN,MAAkBC,WAGnB,qBAAGD,MAAkBE,aAChC,qBAAGF,MAAkBC,WAKZ,qBAAGD,MAAkBC,WAGzB,qBAAGD,MAAkBO,oBAKjB,qBAAGP,MAAkBQ,aAK3B,qBAAGR,MAAkBS,eAKf,qBAAGT,MAAkBC,WAChC,qBAAGD,MAAkBE,aAEpB,qBAAGF,MAAkBM,UAIX,qBAAGN,MAAkBC,WAC3B,qBAAGD,MAAkBS,eAK1B,qBAAGT,MAAkBU,cCnFrBC,EAAa,CACxBV,QAAS,OACTC,UAAW,UACXE,SAAU,UACVD,KAAM,UACNE,KAAM,SACNC,OAAQ,oBACRE,UAAW,UACXC,YAAa,kBACbF,iBAAkB,kBAClBG,WAAY,WAGDE,EAAY,CACvBX,QAAS,UACTC,UAAW,OACXE,SAAU,UACVD,KAAM,UACNE,KAAM,UACNC,OAAQ,iBACRE,UAAW,UACXC,YAAa,eACbF,iBAAkB,eAClBG,WAAY,W,6SCrBd,IAAMG,EAAYC,IAAOC,IAAV,KASTC,EAAOF,IAAOG,GAAV,KA4BKC,MAvBf,YAAwC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAEvB,OACE,cAACP,EAAD,CAAWQ,UAAU,UAArB,SACY,UAATF,EACC,mEAES,aAATA,EACE,eAACH,EAAD,YACII,EAAWE,oBAAsB,kFACjCF,EAAWG,iBAAmB,gFAC9BH,EAAWI,iBAAmB,gFAC9BJ,EAAWK,aAAe,mEAC1BL,EAAWM,wBAA0B,0GACrCN,EAAWO,iBAAmB,wEAGlC,+DCjCK,MAA0B,sCCA1B,MAA0B,6C,iyBCQzC,IAAMd,EAAYC,IAAOC,IAAV,KAUTa,EAAWd,IAAOe,MAAV,KAGV,SAAAC,GAAK,MAAqB,SAAjBA,EAAMxB,OACb,wBACmB,UAAjBwB,EAAMxB,OACN,oBAEA,mBAcFyB,EAAMjB,IAAOkB,IAAV,KAQHC,EAAYnB,IAAOoB,KAAV,KAyLAC,MAlLf,YAUI,IATFC,EASC,EATDA,aACAC,EAQC,EARDA,YACAC,EAOC,EAPDA,MACAC,EAMC,EANDA,WACAC,EAKC,EALDA,cACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,cACArC,EACC,EADDA,OACC,EAEiDsC,oBAAS,GAF1D,mBAEMC,EAFN,KAEyBC,EAFzB,OAGiCF,mBAASR,GAH1C,mBAGMW,EAHN,KAGiBC,EAHjB,OAI2CJ,oBAAS,GAJpD,mBAIMK,EAJN,KAIsBC,EAJtB,OAKmDN,mBAAS,CAC3DtB,oBAAoB,EACpBC,iBAAiB,EACjBC,iBAAiB,EACjBC,aAAa,EACbC,wBAAwB,EACxBC,iBAAiB,IAXlB,mBAKMwB,EALN,KAK0BC,EAL1B,KAcKC,EAAuB,SACvBC,EAAoB,QACpBC,EAAoB,QACpBC,EAAgB,QAChBC,EAAkB,cAClBC,EAAqB,OA+GrBC,EAAW,SAAC9B,GAEI,UAAjBY,EACDE,EAAcJ,EAAYE,EAAcZ,IAChB,aAAjBY,GAEiB,qBAAjBA,IADPE,EAAcH,EAAeC,EAAcZ,GAlH5B,SAACA,GACfwB,EAAqBO,KAAK/B,GAC3BuB,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BvC,oBAAoB,OAGtB8B,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BvC,oBAAoB,OAIrBgC,EAAkBM,KAAK/B,GACxBuB,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BtC,iBAAiB,OAGnB6B,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BtC,iBAAiB,OAIlBgC,EAAkBK,KAAK/B,GACxBuB,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BrC,iBAAiB,OAGnB4B,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BrC,iBAAiB,OAIlBgC,EAAcI,KAAK/B,GACpBuB,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BpC,aAAa,OAGf2B,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BpC,aAAa,OAIdgC,EAAgBG,KAAK/B,GACtBuB,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BnC,wBAAwB,OAG1B0B,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BnC,wBAAwB,OAIzBgC,EAAmBE,KAAK/B,GACzBuB,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BlC,iBAAiB,OAGnByB,GAAsB,SAAAS,GAAS,kCACzBA,GADyB,IAE7BlC,iBAAiB,OAkDrBmC,CAAWjC,GA7CgB,SAACA,GACf,KAAVA,EACDqB,GAAkB,GAEE,aAAjBT,EACED,EAAcoB,KAAK/B,GACpBqB,GAAkB,GAElBA,GAAkB,GAEI,UAAjBT,EACJF,EAAWqB,KAAK/B,GACjBqB,GAAkB,GAElBA,GAAkB,GAIlBA,EADCR,IAAcb,GA6BrBkC,CAAqBlC,IAGvB,OACE,eAAC,EAAD,CAAWR,UAAU,iBAArB,UACE,cAACO,EAAD,CACET,KAAM4B,EACNV,YAAaA,EACb2B,aAAa,MACb1B,MAAOA,EACPqB,SAAU,SAACxD,GAAD,OAAUwD,EAASxD,EAAK8D,OAAO3B,QACzChC,OAAQA,IAEV,cAAC2B,EAAD,CAAWZ,UAAU,cACH,aAAjBe,GACC,cAACL,EAAD,CAAKmC,QAAS,iBAlCD,SAAdnB,EACDC,EAAa,YACQ,aAAdD,GACPC,EAAa,aAEfF,GAAqB,SAAAe,GAAS,OAAiBA,MA6BKM,IAAKtB,EAAoBuB,EAAMC,EAAYC,IAAI,0BAEhGrB,GACC,cAAC,EAAD,CACE9B,KAAMsB,EACNrB,WAAY+B,Q,qLChOtB,IAAMoB,EAAOzD,IAAO0D,GAAV,KAcKC,MANf,YAAyB,IAATnC,EAAQ,EAARA,MACd,OACE,cAACiC,EAAD,UAAOjC,K,6QCVX,IAAMzB,EAAYC,IAAOC,IAAV,KAWF,SAAAe,GAAK,OAAIA,EAAM4C,OAAS,QAAU,UAWhCC,MARf,YAAiC,IAAXD,EAAU,EAAVA,OACpB,OACE,cAAC,EAAD,CAAWA,OAAQA,EAAnB,SACE,mBAAGrD,UAAU,aAAb,yFCnBS,MAA0B,gDCA1B,MAA0B,gD,kpCCSzC,IAAMuD,EAAU9D,IAAOC,IAAV,KAOE,SAAAe,GAAK,OAAIA,EAAM4C,OAAS,kBAAoB,uBAC9C,SAAA5C,GAAK,OAAIA,EAAM4C,OAAS,IAAM,OAC3B,SAAA5C,GAAK,OAAIA,EAAM4C,OAAS,UAAY,YAI9CG,EAAe/D,IAAOgE,EAAV,KAOZC,EAAejE,IAAOkE,OAAV,KAQZC,EAAWnE,IAAOC,IAAV,KAaRmE,EAAapE,IAAOkB,IAAV,KAIVmD,EAAarE,IAAOsE,EAAV,KA0GDC,MArGf,YASI,IARFX,EAQC,EARDA,OACAY,EAOC,EAPDA,2BACAC,EAMC,EANDA,qBACAvF,EAKC,EALDA,MACAuC,EAIC,EAJDA,WACAC,EAGC,EAHDA,cACAgD,EAEC,EAFDA,kBACAC,EACC,EADDA,qBACC,EAEyB7C,mBAAS,IAFlC,mBAEM8C,EAFN,KAEaC,EAFb,OAG+B/C,mBAAS,IAHxC,mBAGMgD,EAHN,KAGgBC,EAHhB,OAIqCjD,mBAAS,QAJ9C,mBAIMkD,EAJN,KAImBC,EAJnB,OAK6CnD,mBAAS,QALtD,mBAKMoD,EALN,KAKuBC,EALvB,KAwCKC,EAAsB,SAACC,EAAO1D,EAAcZ,IAbhC,SAACY,EAAcZ,GAC/B,OAAQY,GACN,IAAK,QACHkD,EAAS9D,GACT,MACF,IAAK,WACHgE,EAAYhE,IAQhBuE,CAAU3D,EAAcZ,GAlCR,SAACsE,EAAO1D,EAAcZ,GAClB,UAAjBY,EACY,KAAVZ,EACDkE,EAAe,QACE,KAAVlE,GAAiBsE,EAAMvC,KAAK/B,GAElB,KAAVA,GAAgBsE,EAAMvC,KAAK/B,IAClCkE,EAAe,SAFfA,EAAe,WAIO,aAAjBtD,IACM,KAAVZ,EACDoE,EAAmB,QACF,KAAVpE,GAAiBsE,EAAMvC,KAAK/B,GAElB,KAAVA,GAAgBsE,EAAMvC,KAAK/B,IAClCoE,EAAmB,SAFnBA,EAAmB,YAsBvBI,CAAUF,EAAO1D,EAAcZ,IAgBjC,OACE,eAAC+C,EAAD,CAASvD,UAAU,OAAOqD,OAAQA,EAAlC,UACE,cAAC,EAAD,CAAYA,OAAQc,IACpB,cAAC,EAAD,CAAOlD,MAAM,YACb,cAAC,EAAD,CACEF,aAAa,OACbK,aAAa,QACbJ,YAAY,QACZ2B,aAAa,MACb1B,MAAOoD,EACPnD,WAAYA,EACZI,cAAeuD,EACf5F,OAAQwF,IAEV,cAAC,EAAD,CACE1D,aAAa,WACbK,aAAa,WACbJ,YAAY,WACZ2B,aAAa,MACb1B,MAAOsD,EACPpD,cAAeA,EACfG,cAAeuD,EACf5F,OAAQ0F,IAEV,cAACnB,EAAD,CAAcyB,KAAK,IAAnB,oCACA,cAACvB,EAAD,CAAc1D,UAAU,gBAAgBF,KAAK,SAAS+C,QAAS,kBAhCjEqB,EAAqBG,EAAOE,GAC5BD,EAAS,IACTE,EAAY,IACZE,EAAe,aACfE,EAAmB,SA4BjB,qBACA,eAAChB,EAAD,CAAU5D,UAAU,YAAY6C,QAAS,kBAtC3CuB,GAAqB,QACrBH,KAqCE,UACE,cAACH,EAAD,sBACA,cAACD,EAAD,CAAYf,IAAe,UAAVnE,EAAoBuG,EAAoBC,EAAmBlC,IAAI,0B,6QCxJxF,IAAMzD,GAAYC,IAAOC,IAAV,KAWF,SAAAe,GAAK,OAAIA,EAAM4C,OAAS,QAAU,UAWhC+B,OARf,YAAkC,IAAX/B,EAAU,EAAVA,OACrB,OACE,cAAC,GAAD,CAAWA,OAAQA,EAAnB,SACE,mBAAGrD,UAAU,aAAb,oECnBS,OAA0B,+CCA1B,OAA0B,+C,k9BCUzC,IAAMR,GAAYC,IAAOC,IAAV,MAOA,SAAAe,GAAK,OAAIA,EAAM4C,OAAS,mBAAqB,sBAC/C,SAAA5C,GAAK,OAAIA,EAAM4C,OAAS,IAAM,OAC3B,SAAA5C,GAAK,OAAIA,EAAM4C,OAAS,UAAY,YAI9CK,GAAejE,IAAOkE,OAAV,MAQZ0B,GAAW5F,IAAOC,IAAV,MAYR4F,GAAY7F,IAAOkB,IAAV,MAITmD,GAAarE,IAAOsE,EAAV,MAmIDwB,OA9Hf,YASI,IARFlC,EAQC,EARDA,OACAY,EAOC,EAPDA,2BACAuB,EAMC,EANDA,qBACA7G,EAKC,EALDA,MACAuC,EAIC,EAJDA,WACAC,EAGC,EAHDA,cACAsE,EAEC,EAFDA,mBACAC,EACC,EADDA,sBACC,EAEyBnE,mBAAS,IAFlC,mBAEM8C,EAFN,KAEaC,EAFb,OAGiC/C,mBAAS,IAH1C,mBAGMF,EAHN,KAGiBsE,EAHjB,OAIiCpE,mBAAS,IAJ1C,mBAIMqE,EAJN,KAIiBC,EAJjB,OAKqCtE,mBAAS,QAL9C,mBAKMkD,EALN,KAKmBC,EALnB,OAM6CnD,mBAAS,QANtD,mBAMMoD,EANN,KAMuBC,EANvB,OAO6CrD,mBAAS,QAPtD,mBAOMuE,EAPN,KAOuBC,EAPvB,KA0DKlB,EAAsB,SAACC,EAAO1D,EAAcZ,IAhBhC,SAACY,EAAcZ,GAC/B,OAAQY,GACN,IAAK,QACHkD,EAAS9D,GACT,MACF,IAAK,WACHmF,EAAanF,GACb,MACF,IAAK,mBACHqF,EAAarF,IAQjBuE,CAAU3D,EAAcZ,GA7CR,SAACsE,EAAO1D,EAAcZ,GAClB,UAAjBY,EACY,KAAVZ,EACDkE,EAAe,QACE,KAAVlE,GAAiBsE,EAAMvC,KAAK/B,GAElB,KAAVA,GAAgBsE,EAAMvC,KAAK/B,IAClCkE,EAAe,SAFfA,EAAe,WAIO,aAAjBtD,EACM,KAAVZ,EACDoE,EAAmB,QACF,KAAVpE,GAAiBsE,EAAMvC,KAAK/B,GAElB,KAAVA,GAAgBsE,EAAMvC,KAAK/B,IAClCoE,EAAmB,SAFnBA,EAAmB,WAIG,qBAAjBxD,IACM,KAAVZ,EACDuF,EAAmB,QACF,KAAVvF,GAAgBA,IAAUa,EACjC0E,EAAmB,WACF,KAAVvF,GAAgBA,IAAUa,GACjC0E,EAAmB,UAuBvBf,CAAUF,EAAO1D,EAAcZ,IAajC,OACE,eAAC,GAAD,CAAWR,UAAU,OAAOqD,OAAQA,EAApC,UACE,cAAC,GAAD,CAAaA,OAAQoC,IACrB,cAAC,EAAD,CAAOxE,MAAM,YACX,cAAC,EAAD,CACEF,aAAa,OACbK,aAAa,QACbJ,YAAY,QACZ2B,aAAa,MACb1B,MAAOoD,EACPnD,WAAYA,EACZI,cAAeuD,EACf5F,OAAQwF,IAEV,cAAC,EAAD,CACE1D,aAAa,WACbK,aAAa,WACbJ,YAAY,WACZ2B,aAAa,MACb1B,MAAOI,EACPF,cAAeA,EACfG,cAAeuD,EACf5F,OAAQ0F,IAEV,cAAC,EAAD,CACE5D,aAAa,WACbK,aAAa,mBACbJ,YAAY,mBACZ2B,aAAa,MACb1B,MAAO2E,EACPzE,cAAeA,EACfE,UAAWA,EACXC,cAAeuD,EACf5F,OAAQ6G,IAEZ,cAAC,GAAD,CAAc9F,UAAU,gBAAgBF,KAAK,SAAS+C,QAAS,kBA5CjE2C,EAAqBnB,EAAOhD,EAAWuE,GACvCtB,EAAS,IACTqB,EAAa,IACbE,EAAa,IACbnB,EAAe,QACfE,EAAmB,aACnBmB,EAAmB,SAsCjB,qBACA,eAACV,GAAD,CAAUrF,UAAU,YAAY6C,QAAS,kBAnG3C6C,GAAsB,QACtBzB,KAkGE,UACE,cAACqB,GAAD,CAAWxC,IAAe,UAAVnE,EAAoBqH,GAAmBC,GAAkBhD,IAAI,wBAC7E,cAAC,GAAD,6B,+nBC1KR,IAAMzD,GAAYC,IAAOC,IAAV,MAOA,SAAAe,GAAK,OAAIA,EAAM4C,OAAS,YAAc,eAK/C6C,GAAYzG,IAAO0G,GAAV,MAKTC,GAAe3G,IAAOkE,OAAV,MAqBH0C,OAVf,YAA+C,IAAxBC,EAAuB,EAAvBA,YAAajD,EAAU,EAAVA,OAClC,OACE,eAAC,GAAD,CAAWA,OAAQA,EAAnB,UAEE,cAAC6C,GAAD,kCACA,cAACE,GAAD,CAAcpG,UAAU,gBAAgB6C,QAAS,kBAAMyD,KAAvD,yBCnCS,OAA0B,6CCA1B,OAA0B,sC,knCCazC,IAAM/C,GAAU9D,IAAOC,IAAV,MAMP6G,GAAiB9G,IAAOC,IAAV,MASL,SAAAe,GAAK,OAAIA,EAAM4C,OAAS,YAAc,eAK/CmD,GAAkB/G,IAAOC,IAAV,MAMf+G,GAAehH,IAAOkE,OAAV,MAWZ+C,GAASjH,IAAOC,IAAV,MASC,SAAAe,GAAK,OAAIA,EAAM4C,OAAS,OAAS,UAgJ/BsD,OA1If,WAAgB,IAAD,EAEapF,mBAAS,SAFtB,mBAEN5C,EAFM,KAECiI,EAFD,OAG+BrF,mBAAS,UAHxC,mBAGNsF,EAHM,KAGUC,EAHV,OAI+BvF,mBAAS,CACnD8C,MAAO,GACPE,SAAU,KANC,mBAINwC,EAJM,KAIUC,EAJV,OAQ6CzF,oBAAS,GARtD,mBAQN0F,EARM,KAQkBC,EARlB,OASuC3F,oBAAS,GAThD,mBASN4F,EATM,KASeC,EATf,OAUqC7F,oBAAS,GAV9C,mBAUN4C,EAVM,KAUaC,EAVb,OAWuC7C,oBAAS,GAXhD,mBAWNkE,EAXM,KAWcC,EAXd,KAaPxE,EAAa,oFACbC,EAAgB,sFAMhBmF,EAAc,WAClBY,GAAwB,SAAA1E,GAAS,OAAiBA,KAClD4E,GAAqB,SAAA5E,GAAS,OAAiBA,MAG3CyB,EAA6B,WAE/B6C,EADiB,WAAnBD,EACoB,SACA,WAGhBQ,EAAqB,SAACvC,EAAOtE,GACjC,OAAOsE,EAAMvC,KAAK/B,IA8DpB,OACG,cAAC,IAAD,CAAe7B,MAAiB,UAAVA,EAAoBW,EAAaC,EAAvD,SACC,qCACA,cAACd,EAAD,IAEE,eAAC,GAAD,WACE,cAACgI,GAAD,CAAczG,UAAU,gBAAgB6C,QApF3B,WACC+D,EAAV,UAAVjI,EAA6B,OAAmB,UAmF1C,SACI,qBAAKmE,IAAe,UAAVnE,EAAoB2I,GAAOC,GAAKtE,IAAI,wBAGlD,eAACsD,GAAD,CAAgBlD,OAAQ4D,EAAxB,UACE,eAACT,GAAD,WACE,cAAC,EAAD,CACEtC,qBAhCe,SAACG,EAAOE,GACnC,GAAG8C,EAAmBlG,EAAeoD,IAAa8C,EAAmBnG,EAAYmD,GAC/E,OAAGA,IAAU0C,EAAe1C,OAASE,IAAawC,EAAexC,UAC/D+B,SACGnC,GACDC,GAAqB,UAIvBA,GAAqB,GAGpBD,GACDC,GAAqB,IAoBbH,2BAA4BA,EAC5BZ,OAA2B,WAAnBwD,EACRlI,MAAOA,EACPuC,WAAYA,EACZC,cAAeA,EACfgD,kBAAmBA,EACnBC,qBAAsBA,IAExB,cAAC,GAAD,CACEoB,qBA9De,SAACnB,EAAOhD,EAAWuE,GAM9C,OAJ0B,IAAvBH,GACDC,GAAsB,GAvBM,SAACrE,EAAWuE,GAC1C,QAAGyB,EAAmBlG,EAAeE,IAChCA,IAAcuE,EAwBhB4B,CAAwBnG,EAAWuE,IAAcyB,EAAmBnG,EAAYmD,GAC9E0C,EAAe1C,QAAUA,GAfX,SAACA,EAAOE,GAC3ByC,EAAkB,CAChB3C,MAAOA,EACPE,SAAUA,IAEZ+B,IAWImB,CAAapD,EAAOuB,IACb,QAEPF,GAAsB,QAKxB,GA+CUzB,2BAA4BA,EAC5BZ,OAA2B,WAAnBwD,EACRlI,MAAOA,EACPuC,WAAYA,EACZC,cAAeA,EACfsE,mBAAoBA,EACpBC,sBAAuBA,OAG3B,cAACgB,GAAD,CAAQrD,OAAQ4D,EAAhB,SACE,0GAGJ,cAAC,GAAD,CAAaX,YAAaA,EAAajD,OAAQ8D,aCxL1CO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.2a817bae.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    background: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.secondary};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.30s linear;\n  }\n\n  h2 {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.30s linear;\n  }\n\n  p{\n    color: ${({ theme }) => theme.text};\n    transition: all 0.30s linear;\n  }\n\n  input {\n    background-color: ${({ theme }) => theme.tertiary};\n    color: ${({ theme }) => theme.text};\n    transition: all .3s linear;\n    ::placeholder{\n      color: ${({ theme }) => theme.text};\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.link};\n    transition: all 0.30s linear;\n    :visited {\n      color: ${({ theme }) => theme.link};\n    }\n  }\n\n  .submit-button {\n    color: ${({ theme }) => theme.text};\n    border: ${({ theme }) => theme.border};\n    background-color: ${({ theme }) => theme.primary};\n    transition: all .3s linear;\n    &:hover {\n      background-color: ${({ theme }) => theme.secondary};\n      color: ${({ theme }) => theme.primary}\n    }\n  }\n\n  .navButton {\n    background-color: ${({ theme }) => theme.primary};\n    transition: all 0.30s linear;\n      &:hover{\n      box-shadow: ${({ theme }) => theme.navButton_shadow};\n    }\n  }\n\n  .underline {\n    background-color: ${({ theme }) => theme.underline};\n    transition: all .3s linear\n  }\n\n  .form {\n    box-shadow: ${({ theme }) => theme.main_shadow};\n    transition: all .3s linear;\n  }\n\n  .helpbox {\n    background-color: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.secondary};\n    transition: all 0.30s linear;\n    border: ${({ theme }) => theme.border};\n  }\n\n  .theme-toggler {\n    background-color: ${({ theme }) => theme.primary};\n    box-shadow: ${({ theme }) => theme.main_shadow};\n    transition: all 0.30s linear;\n  }\n\n  .error-text {\n    color: ${({ theme }) => theme.error_text};\n  }\n  \n  `;","export const lightTheme = {\n  primary: '#fff',\n  secondary: '#363537',\n  tertiary: '#E3E3E3',\n  text: '#000000',\n  link: '1B2AFC',\n  border: '1px solid #363537',\n  underline: '#363537',\n  main_shadow: '0 0 7px #7f807f',\n  navButton_shadow: '0 0 4px #7f807f',\n  error_text: '#363537'\n}\n\nexport const darkTheme = {\n  primary: '#363537',\n  secondary: '#fff',\n  tertiary: '#616161',\n  text: '#fafafa',\n  link: '#00D7FE',\n  border: '1px solid #fff',\n  underline: '#00D7FE',\n  main_shadow: '0 0 7px #000',\n  navButton_shadow: '0 0 4px #000',\n  error_text: '#363537'\n}","import styled from 'styled-components'\n\nconst Container = styled.div`\n  font-size: 12px;\n  padding: 5px;\n  transform: translateX(100%);\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst List = styled.ul`\n  margin: 0;\n  padding-left: 15px\n`;\n\nfunction HelpBox({ type, conditions }) {\n\n  return(\n    <Container className=\"helpbox\">\n      {type === 'email' ?\n        <p>This must be a valid email address</p>\n        : \n        type === 'password' ?\n          <List>\n            {!conditions.hasEnoughCharacter && <li>Password is too short (minimum is 8 characters)</li>}\n            {!conditions.hasOneUpperCase && <li>Password needs at least one upper case letter</li>}\n            {!conditions.hasOneLowerCase && <li>Password needs at least one lower case letter</li>}\n            {!conditions.hasOneDigit && <li>Password needs at least 1 number</li>}\n            {!conditions.hasOneSpecialCharacter && <li>Password needs at least 1 special character (!, @, #, $, %, ^, &, ^, *)</li>}\n            {!conditions.containsNoSpace && <li>Password must not contain any space</li>}\n          </List>\n          :\n          <p>The password does not match</p>\n      }\n    </Container>\n  )\n}\n\nexport default HelpBox","export default __webpack_public_path__ + \"static/media/eye-solid.637d0a25.svg\";","export default __webpack_public_path__ + \"static/media/eye-closed-solid.977da11a.svg\";","import { useState } from 'react'\nimport styled from 'styled-components'\n\nimport HelpBox from './HelpBox'\n\nimport eye from '../images/eye-solid.svg'\nimport eye_closed from '../images/eye-closed-solid.svg'\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  margin: 10px 0 5px 0;\n  position: relative;\n`;\n\nconst InputBox = styled.input`\n  padding: 10px;\n  border: ${\n    props => props.border === 'none' ? \n      '1px solid transparent' \n      : props.border === 'valid' ?\n        '1px solid #2DC01B'\n        :\n        '1px solid red'\n  };\n  ::placeholder{\n    font-weight: 300;\n  }\n  :focus{\n    outline: none;\n    & + .underline{\n      opacity: 1;\n      width: 100%;\n    }\n  }\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nconst Underline = styled.span`\n  display: block;\n  height: 2px;\n  opacity: 0;\n  width: 0%;\n`;\n\nfunction Input({ \n  originalType, \n  placeholder, \n  value, \n  emailRegex, \n  passwordRegex, \n  inputPurpose, \n  password1,\n  onChangeInput,\n  border\n}) {\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false)\n  const [inputType, setInputType] = useState(originalType)\n  const [displayHelpbox, setDisplayHelpbox] = useState(false)\n  const [passwordConditions, setPasswordConditions] = useState({\n    hasEnoughCharacter: false,\n    hasOneUpperCase: false,\n    hasOneLowerCase: false,\n    hasOneDigit: false,\n    hasOneSpecialCharacter: false,\n    containsNoSpace: false\n  })\n   \n  const enoughCharacterRegex = /^.{8,}/\n  const oneUpperCaseRegex = /[A-Z]/\n  const oneLowerCaseRegex = /[a-z]/\n  const oneDigitRegex = /[0-9]/\n  const oneSpecialRegex = /[!@#$%^&^*]/\n  const containsSpaceRegex = /[\\s]/\n\n  const setHelpBox = (input) => {\n    if(enoughCharacterRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasEnoughCharacter: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasEnoughCharacter: false}\n      ))\n    }\n\n    if(oneUpperCaseRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneUpperCase: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneUpperCase: false}\n      ))\n    }\n\n    if(oneLowerCaseRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneLowerCase: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneLowerCase: false}\n      ))\n    }\n\n    if(oneDigitRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneDigit: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneDigit: false}\n      ))\n    }\n\n    if(oneSpecialRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneSpecialCharacter: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneSpecialCharacter: false}\n      ))\n    }\n\n    if(containsSpaceRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        containsNoSpace: false}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        containsNoSpace: true}\n      ))\n    }\n  }\n\n  const setHelpboxVisibility = (input) => {\n    if(input === ''){\n      setDisplayHelpbox(false)\n    }else{\n      if(inputPurpose === 'password'){\n        if(passwordRegex.test(input)){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }else if(inputPurpose === \"email\"){\n        if(emailRegex.test(input)){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }else{\n        if(password1 === input){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }\n    }\n  }\n\n  const handlePasswordVisibility = () => {\n    if(inputType === 'text'){\n      setInputType('password')\n    }else if(inputType === 'password'){\n      setInputType('text')\n    }\n    setIsPasswordVisible(prevState => prevState = !prevState)\n  }\n\n  const onChange = (input) => {\n\n    if(inputPurpose === 'email'){\n      onChangeInput(emailRegex, inputPurpose, input)\n    }else if(inputPurpose === 'password'){\n      onChangeInput(passwordRegex, inputPurpose, input)\n    }else if(inputPurpose === 'confirm-password'){\n      onChangeInput(passwordRegex, inputPurpose, input)\n    }\n\n    setHelpBox(input)\n    setHelpboxVisibility(input)\n  }\n\n  return(\n    <Container className=\"inputContainer\">\n      <InputBox \n        type={inputType}\n        placeholder={placeholder}\n        autoComplete=\"off\"\n        value={value}\n        onChange={(text) => onChange(text.target.value)}\n        border={border}\n      />\n      <Underline className=\"underline\"></Underline>\n      {originalType === 'password' &&\n        <Img onClick={() => handlePasswordVisibility()} src={isPasswordVisible ? eye : eye_closed} alt=\"Icon visible password\"/>\n      }\n      {displayHelpbox &&\n        <HelpBox \n          type={inputPurpose}\n          conditions={passwordConditions}\n        />\n      }\n    </Container>\n  )\n}\n\nexport default Input","import styled from 'styled-components'\n\nconst Text = styled.h2`\n  font-size: 22px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin: 0 0 5px 0;\n  text-align: center;\n`;\n\nfunction Title({value}) {\n  return(\n    <Text>{value}</Text>\n  )\n}\n\nexport default Title","import styled from 'styled-components'\n\nconst Container = styled.div`\n  position: absolute;\n  top: -25%;\n  border: 1px solid red;\n  background-color: #fd9393;\n  border-radius: 5px;\n  font-size: 12px;\n  padding: 5px;\n  & p {\n    margin: 0\n  }\n  display: ${props => props.active ? 'block' : 'none'}\n`;\n\nfunction LoginError({ active }) {\n  return(\n    <Container active={active}>\n      <p className=\"error-text\" >Oups, the email or password you provided do not seem match what we have.</p>\n    </Container>\n  )\n}\n\nexport default LoginError","export default __webpack_public_path__ + \"static/media/chevron-right-black.e32c85b2.svg\";","export default __webpack_public_path__ + \"static/media/chevron-right-white.0c61e753.svg\";","import { useState } from 'react'\nimport styled from 'styled-components'\nimport Input from './Components/Input'\nimport Title from './Components/Title'\nimport LoginError from './Components/LoginError'\nimport arrow_right_black from './images/chevron-right-black.svg'\nimport arrow_right_white from './images/chevron-right-white.svg'\n\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  transform: ${props => props.active ? 'translateX(50%)' : 'translateX(-130%)'};\n  opacity: ${props => props.active ? '1' : '0'};\n  visibility: ${props => props.active ? 'visible' : 'hidden'};\n  position: relative;\n`;\n\nconst PasswordLink = styled.a`\n  font-size: 12px;\n  align-self: flex-end;\n  margin-bottom: 10px;\n  text-decoration: none;\n`;\n\nconst SubmitButton = styled.button`\n  border-radius: 5px;\n  margin: 10px 0 20px 0;\n  padding: 5px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nconst ToSignUp = styled.div`\n  font-size: 14px;\n  padding: 4px 4px 4px 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  position: relative;\n  align-self: flex-end;\n  cursor: pointer;\n  transition: box-shadow .2s linear;\n`;\n\nconst RightArrow = styled.img`\n  transform: translateX(0) \n`;\n\nconst ButtonText = styled.p`\n  font-size: 16;\n  margin: 0 5px 0 0;\n`;\n\nfunction Signin({ \n  active, \n  handleConnectDisplayChange, \n  handleOnSubmitSignin, \n  theme, \n  emailRegex, \n  passwordRegex,\n  loginErrorVisible,\n  setLoginErrorVisible\n}) {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [emailBorder, setEmailBorder] = useState('none')\n  const [password1Border, setPassword1Border] = useState('none')\n\n  const setBorder = (regex, inputPurpose, input) => {\n    if(inputPurpose === 'email'){\n      if(input === ''){\n        setEmailBorder('none')\n      }else if(input !== '' && !regex.test(input)){\n        setEmailBorder('invalid')\n      }else if(input !== '' && regex.test(input)){\n        setEmailBorder('valid')\n      }\n    }else if(inputPurpose === 'password'){\n      if(input === ''){\n        setPassword1Border('none')\n      }else if(input !== '' && !regex.test(input)){\n        setPassword1Border('invalid')\n      }else if(input !== '' && regex.test(input)){\n        setPassword1Border('valid')\n      }\n    }\n  }\n\n  const saveInput = (inputPurpose, input) => {\n    switch (inputPurpose) {\n      case 'email':\n        setEmail(input)\n        break;\n      case 'password':\n        setPassword(input)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleOnChangeInput = (regex, inputPurpose, input) => {\n    saveInput(inputPurpose, input)\n    setBorder(regex, inputPurpose, input)\n  }\n\n  const onClickToSignUp = () => {\n    setLoginErrorVisible(false)\n    handleConnectDisplayChange()\n  }\n\n  const onClickSubmitSignin = () => {\n    handleOnSubmitSignin(email, password)\n    setEmail('');\n    setPassword('')\n    setEmailBorder('none')\n    setPassword1Border('none')\n  }\n\n  return(\n    <Wrapper className=\"form\" active={active}>\n      <LoginError active={loginErrorVisible}/>\n      <Title value=\"Sign In\" />\n      <Input \n        originalType=\"text\"\n        inputPurpose=\"email\"\n        placeholder=\"Email\"\n        autoComplete=\"off\"\n        value={email}\n        emailRegex={emailRegex}\n        onChangeInput={handleOnChangeInput}\n        border={emailBorder}\n      />\n      <Input\n        originalType=\"password\"\n        inputPurpose=\"password\"\n        placeholder=\"Password\"\n        autoComplete=\"off\"\n        value={password}\n        passwordRegex={passwordRegex}\n        onChangeInput={handleOnChangeInput}\n        border={password1Border}\n      />\n      <PasswordLink href=\"#\">Forgot your password ?</PasswordLink>\n      <SubmitButton className=\"submit-button\" type=\"submit\" onClick={() => onClickSubmitSignin()}>Confirm</SubmitButton>\n      <ToSignUp className=\"navButton\" onClick={() => onClickToSignUp()}>\n        <ButtonText >Sign Up</ButtonText>\n        <RightArrow src={theme === 'light' ? arrow_right_black : arrow_right_white} alt=\"Icon to SignUp\" />\n      </ToSignUp>\n    </Wrapper>\n  )\n}\n\nexport default Signin","import styled from 'styled-components'\n\nconst Container = styled.div`\n  position: absolute;\n  top: -25%;\n  border: 1px solid red;\n  background-color: #fd9393;\n  border-radius: 5px;\n  font-size: 12px;\n  padding: 5px;\n  & p {\n    margin: 0\n  }\n  display: ${props => props.active ? 'block' : 'none'}\n`;\n\nfunction SignupError({ active }) {\n  return(\n    <Container active={active}>\n      <p className=\"error-text\" >Oups, the email you provided is already registered.</p>\n    </Container>\n  )\n}\n\nexport default SignupError","export default __webpack_public_path__ + \"static/media/chevron-left-black.8e8852b8.svg\";","export default __webpack_public_path__ + \"static/media/chevron-left-white.65578f22.svg\";","import { useState } from 'react'\n\nimport styled from 'styled-components'\n\nimport Input from './Components/Input'\nimport Title from './Components/Title'\nimport SignupError from './Components/SignupError'\nimport arrow_left_black from './images/chevron-left-black.svg'\nimport arrow_left_white from './images/chevron-left-white.svg'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  transform: ${props => props.active ? 'translateX(-50%)' : 'translateX(130%)'};\n  opacity: ${props => props.active ? '1' : '0'};\n  visibility: ${props => props.active ? 'visible' : 'hidden'};\n  position: relative;\n`;\n\nconst SubmitButton = styled.button`\n  border-radius: 5px;\n  margin: 10px 0 20px 0;\n  padding: 5px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nconst ToSignIn = styled.div`\n  font-size: 14px;\n  padding: 4px 6px 4px 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  position: relative;\n  align-self: flex-start;\n  cursor: pointer;\n`;\n\nconst LeftArrow = styled.img`\n  transform: translateX(0) \n`;\n\nconst ButtonText = styled.p`\n  font-size: 16;\n  margin: 0 0 0 5px;\n`;\n\nfunction Signup({ \n  active, \n  handleConnectDisplayChange, \n  handleOnSubmitSignup, \n  theme, \n  emailRegex, \n  passwordRegex,\n  signupErrorVisible,\n  setSignupErrorVisible\n}) {\n\n  const [email, setEmail] = useState('')\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n  const [emailBorder, setEmailBorder] = useState('none')\n  const [password1Border, setPassword1Border] = useState('none')\n  const [password2Border, setPassword2Border] = useState('none')\n\n  const onClickToSignIn = () => {\n    setSignupErrorVisible(false)\n    handleConnectDisplayChange()\n  }\n\n  const setBorder = (regex, inputPurpose, input) => {\n    if(inputPurpose === 'email'){\n      if(input === ''){\n        setEmailBorder('none')\n      }else if(input !== '' && !regex.test(input)){\n        setEmailBorder('invalid')\n      }else if(input !== '' && regex.test(input)){\n        setEmailBorder('valid')\n      }\n    }else if(inputPurpose === 'password'){\n      if(input === ''){\n        setPassword1Border('none')\n      }else if(input !== '' && !regex.test(input)){\n        setPassword1Border('invalid')\n      }else if(input !== '' && regex.test(input)){\n        setPassword1Border('valid')\n      }\n    }else if(inputPurpose === 'confirm-password'){\n      if(input === ''){\n        setPassword2Border('none')\n      }else if(input !== '' && input !== password1){\n        setPassword2Border('invalid')\n      }else if(input !== '' && input === password1){\n        setPassword2Border('valid')\n      }\n    }\n  }\n\n  const saveInput = (inputPurpose, input) => {\n    switch (inputPurpose) {\n      case 'email':\n        setEmail(input)\n        break;\n      case 'password':\n        setPassword1(input)\n        break;\n      case 'confirm-password':\n        setPassword2(input)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleOnChangeInput = (regex, inputPurpose, input) => {\n    saveInput(inputPurpose, input)\n    setBorder(regex, inputPurpose, input)\n  }\n\n  const onClickSubmitSignUp = () => {\n    handleOnSubmitSignup(email, password1, password2)\n    setEmail('');\n    setPassword1('')\n    setPassword2('')\n    setEmailBorder('none')\n    setPassword1Border('none')\n    setPassword2Border('none')\n  }\n\n  return(\n    <Container className=\"form\" active={active}>\n      <SignupError active={signupErrorVisible}/>\n      <Title value=\"Sign Up\" />\n        <Input \n          originalType=\"text\"\n          inputPurpose=\"email\"\n          placeholder=\"Email\"\n          autoComplete=\"off\"\n          value={email}\n          emailRegex={emailRegex}\n          onChangeInput={handleOnChangeInput}\n          border={emailBorder}\n        />\n        <Input\n          originalType=\"password\"\n          inputPurpose=\"password\"\n          placeholder=\"Password\"\n          autoComplete=\"off\"\n          value={password1}\n          passwordRegex={passwordRegex}\n          onChangeInput={handleOnChangeInput}\n          border={password1Border}\n        />\n        <Input \n          originalType=\"password\"\n          inputPurpose=\"confirm-password\"\n          placeholder=\"Confirm password\"\n          autoComplete=\"off\"\n          value={password2}\n          passwordRegex={passwordRegex}\n          password1={password1}\n          onChangeInput={handleOnChangeInput}\n          border={password2Border}\n        />\n      <SubmitButton className=\"submit-button\" type=\"submit\" onClick={() => onClickSubmitSignUp()}>Confirm</SubmitButton>\n      <ToSignIn className=\"navButton\" onClick={() => onClickToSignIn()}>\n        <LeftArrow src={theme === 'light' ? arrow_left_black : arrow_left_white} alt=\"Icon link to SignIn\" />\n        <ButtonText>Sign In</ButtonText>\n      </ToSignIn>\n    </Container>\n  )\n}\n\nexport default Signup","import styled from 'styled-components'\n\nconst Container = styled.div`\n  display: absolute;\n  height: 100%;\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  transform: ${props => props.active ? 'scaleY(1)' : 'scaleY(0)'};\n  transform-origin: bottom center;\n  transition: transform .3s linear\n`;\n\nconst MainTitle = styled.h1`\n  font-size: 50px;\n  text-align: center;\n`;\n\nconst LogoutButton = styled.button`\n  width: 75px;\n  position: absolute;\n  bottom: 20px; \n  margin: auto;\n  border-radius: 5px;\n  padding: 5px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nfunction WelcomePage({ pageToggler, active }) {\n  return(\n    <Container active={active}>\n      \n      <MainTitle>Welcome to your app</MainTitle>\n      <LogoutButton className=\"submit-button\" onClick={() => pageToggler()} >Log Out</LogoutButton>\n    </Container>\n  )\n}\n\nexport default WelcomePage","export default __webpack_public_path__ + \"static/media/cloud-moon-solid.9d38ca39.svg\";","export default __webpack_public_path__ + \"static/media/sun-solid.78cf9218.svg\";","import React, { useState } from \"react\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Components/GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./Components/Themes\"\n\nimport Signin from './Signin'\nimport Signup from './Signup'\nimport WelcomePage from './WelcomePage'\n\nimport moon from './images/cloud-moon-solid.svg'\nimport sun from './images/sun-solid.svg'\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n`;\n\nconst ConnectionPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: none;\n  position: absolute;\n  top:0; left: 0; bottom: 0; right: 0;\n  overflow-x: hidden;\n  transform: ${props => props.active ? 'scaleY(1)' : 'scaleY(0)'};\n  transform-origin: top center;\n  transition: transform .3s linear\n`;\n\nconst ModuleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ThemeToggler = styled.button`\n  border-radius: 50%;\n  padding: 5px;\n  border: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 20;\n  cursor: pointer;\n`;\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 0;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  font-size: 12px;\n  display: ${props => props.active ? 'flex' : 'none'};\n  & p {\n    margin: 0;\n  }\n`;\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [connectDisplay, setConnectDisplay] = useState('signin')\n  const [registeredUser, setRegisteredUser] = useState({\n    email: '',\n    password: ''\n  })\n  const [isConnectionPageActive, setConnectionPageActive] = useState(true)\n  const [isWelcomePageActive, setWelcomePageActive] = useState(false)\n  const [loginErrorVisible, setLoginErrorVisible] = useState(false)\n  const [signupErrorVisible, setSignupErrorVisible] = useState(false)\n\n  const emailRegex = /^[a-zA-Z0-9.-]{2,20}@([a-zA-Z0-9]{2,15})+(\\.[a-zA-Z]{2,3})+((\\.[a-zA-Z]{2,3})?)+$/\n  const passwordRegex = /^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&^*])(?!.*[\\s])(?!.*[<>]).*$/\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  const pageToggler = () => {\n    setConnectionPageActive(prevState => prevState = !prevState);\n    setWelcomePageActive(prevState => prevState = !prevState)\n  }\n\n  const handleConnectDisplayChange = () => {\n    connectDisplay === 'signin' \n    ? setConnectDisplay('signup')\n    : setConnectDisplay('signin') \n  }\n\n  const checkInputValidity = (regex, input) => {\n    return regex.test(input);\n  }\n\n  const checkPasswordConformity = (password1, password2) => {\n    if(checkInputValidity(passwordRegex, password1)){\n      if(password1 === password2){\n        return true\n      }else{\n        return false\n      }\n    }else{\n      return false\n    }\n  }\n\n  const registerUser = (email, password) =>{\n    setRegisteredUser({\n      email: email,\n      password: password\n    })\n    pageToggler()\n  }\n\n  const handleOnSubmitSignup = (email, password1, password2) => {\n\n    if(signupErrorVisible === true){\n      setSignupErrorVisible(false)\n    }\n\n    if(checkPasswordConformity(password1, password2) && checkInputValidity(emailRegex, email)){\n      if(registeredUser.email !== email){\n        registerUser(email, password2)\n        return true\n      }else{\n        setSignupErrorVisible(true)\n        return\n      }\n    }else{\n      // Credentials do not match regex\n      return\n    }\n  }\n\n  const handleOnSubmitSignin = (email, password) => {\n    if(checkInputValidity(passwordRegex, password) && checkInputValidity(emailRegex, email)){\n      if(email === registeredUser.email && password === registeredUser.password){\n        pageToggler()\n        if(loginErrorVisible){\n          setLoginErrorVisible(false)\n        }\n        return\n      }else{\n        setLoginErrorVisible(true)\n      }\n    }else{\n      if(loginErrorVisible){\n        setLoginErrorVisible(false)\n      }\n      return\n    }\n  }\n\n  return (\n     <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <GlobalStyles/>\n\n        <Wrapper>\n          <ThemeToggler className=\"theme-toggler\" onClick={themeToggler}>\n              <img src={theme === 'light' ? moon : sun} alt=\"Toggle theme icon\" />\n          </ThemeToggler>\n\n          <ConnectionPage active={isConnectionPageActive}>\n            <ModuleContainer>\n              <Signin \n                handleOnSubmitSignin={handleOnSubmitSignin} \n                handleConnectDisplayChange={handleConnectDisplayChange} \n                active={connectDisplay === 'signin' ? true : false}\n                theme={theme}\n                emailRegex={emailRegex}\n                passwordRegex={passwordRegex}\n                loginErrorVisible={loginErrorVisible}\n                setLoginErrorVisible={setLoginErrorVisible}\n              />\n              <Signup \n                handleOnSubmitSignup={handleOnSubmitSignup} \n                handleConnectDisplayChange={handleConnectDisplayChange} \n                active={connectDisplay === 'signup' ? true : false}\n                theme={theme}\n                emailRegex={emailRegex}\n                passwordRegex={passwordRegex}\n                signupErrorVisible={signupErrorVisible}\n                setSignupErrorVisible={setSignupErrorVisible}\n              />\n            </ModuleContainer>\n            <Footer active={isConnectionPageActive}>\n              <p>This is a demo version, you may only register one account at a time.</p>\n            </Footer>\n          </ConnectionPage>\n          <WelcomePage pageToggler={pageToggler} active={isWelcomePageActive}/>\n        </Wrapper>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}