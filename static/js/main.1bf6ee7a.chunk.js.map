{"version":3,"sources":["Components/GlobalStyle.js","Components/Themes.js","Components/HelpBox.js","images/eye-solid.svg","images/eye-closed-solid.svg","Components/Input.js","Components/Title.js","Components/SubmitButton.js","images/chevron-right-black.svg","images/chevron-right-white.svg","Signin.js","images/chevron-left-black.svg","images/chevron-left-white.svg","Signup.js","images/cloud-moon-solid.svg","images/sun-solid.svg","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","primary","secondary","text","tertiary","link","border","navButton_shadow","underline","main_shadow","lightTheme","darkTheme","Container","styled","div","List","ul","HelpBox","type","conditions","className","hasEnoughCharacter","hasOneUpperCase","hasOneLowerCase","hasOneDigit","hasOneSpecialCharacter","containsNoSpace","InputBox","input","props","status","Img","img","Underline","span","Input","originalType","placeholder","value","saveInput","emailRegex","passwordRegex","inputPurpose","password1","useState","isPasswordVisible","setIsPasswordVisible","inputType","setInputType","borderType","setBorderType","displayHelpbox","setDisplayHelpbox","passwordConditions","setPasswordConditions","enoughCharacterRegex","oneUpperCaseRegex","oneLowerCaseRegex","oneDigitRegex","oneSpecialRegex","containsSpaceRegex","setBorder","regex","test","handleOnChange","prevState","setHelpBox","setHelpboxVisibility","autoComplete","onChange","target","onClick","src","eye","eye_closed","alt","Text","h2","Title","Button","button","SubmitButton","Wrapper","active","PasswordLink","a","ToSignUp","RightArrow","ButtonText","p","Signin","handleConnectDisplayChange","handleOnSubmitSignin","email","setEmail","password","setPassword","href","arrow_right_black","arrow_right_white","ToSignIn","LeftArrow","Signup","handleOnSubmitSignup","setPassword1","password2","setPassword2","arrow_left_black","arrow_left_white","ModuleContainer","ThemeToggler","App","setTheme","connectDisplay","setConnectDisplay","registeredUser","setRegisteredUser","checkInputValidity","registerUser","moon","sun","console","log","checkPasswordConformity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bf6ee7a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    background: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.secondary};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.30s linear;\n  }\n\n  h2 {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.30s linear;\n  }\n\n  p{\n    color: ${({ theme }) => theme.text};\n    transition: all 0.30s linear;\n  }\n\n  input {\n    background-color: ${({ theme }) => theme.tertiary};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.30s linear;\n    ::placeholder{\n      color: ${({ theme }) => theme.text};\n      transition: color 0.30s linear;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.link};\n    transition: all 0.30s linear;\n    :visited {\n      color: ${({ theme }) => theme.link};\n    }\n  }\n\n  .submit-button {\n    color: ${({ theme }) => theme.text};\n    border: ${({ theme }) => theme.border};\n    background-color: ${({ theme }) => theme.primary};\n    transition: all .3s linear;\n    &:hover {\n      background-color: ${({ theme }) => theme.secondary};\n      color: ${({ theme }) => theme.primary}\n    }\n  }\n\n  .navButton {\n    background-color: ${({ theme }) => theme.primary};\n    transition: all 0.30s linear;\n      &:hover{\n      box-shadow: ${({ theme }) => theme.navButton_shadow};\n    }\n  }\n\n  .underline {\n    background-color: ${({ theme }) => theme.underline};\n    transition: all .3s linear\n  }\n\n  .form {\n    box-shadow: ${({ theme }) => theme.main_shadow};\n    transition: all .3s linear;\n  }\n\n  .helpbox {\n    background-color: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.secondary};\n    transition: all 0.30s linear;\n    border: ${({ theme }) => theme.border};\n  }\n\n  .theme-toggler {\n    background-color: ${({ theme }) => theme.primary};\n    box-shadow: ${({ theme }) => theme.main_shadow};\n    transition: all 0.30s linear;\n  }\n  \n  `;","export const lightTheme = {\n  primary: '#fff',\n  secondary: '#363537',\n  tertiary: '#E3E3E3',\n  text: '#000000',\n  link: '1B2AFC',\n  border: '1px solid #363537',\n  underline: '#363537',\n  main_shadow: '0 0 7px #7f807f',\n  navButton_shadow: '0 0 4px #7f807f'\n}\n\nexport const darkTheme = {\n  primary: '#363537',\n  secondary: '#fff',\n  tertiary: '#616161',\n  text: '#fafafa',\n  link: '#00D7FE',\n  border: '1px solid #fff',\n  underline: '#00D7FE',\n  main_shadow: '0 0 7px #000',\n  navButton_shadow: '0 0 4px #000'\n}","import styled from 'styled-components'\n\nconst Container = styled.div`\n  font-size: 12px;\n  padding: 5px;\n  transform: translateX(100%);\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: #fff;\n  z-index: 10;\n`;\n\nconst List = styled.ul`\n  margin: 0;\n  padding-left: 15px\n`;\n\nfunction HelpBox({ type, conditions }) {\n\n  return(\n    <Container className=\"helpbox\">\n      {type === 'email' ?\n        <p>This must be a valid email address</p>\n        : \n        type === 'password' ?\n          <List>\n            {!conditions.hasEnoughCharacter && <li>Password is too short (minimum is 8 characters)</li>}\n            {!conditions.hasOneUpperCase && <li>Password needs at least one upper case letter</li>}\n            {!conditions.hasOneLowerCase && <li>Password needs at least one lower case letter</li>}\n            {!conditions.hasOneDigit && <li>Password needs at least 1 number</li>}\n            {!conditions.hasOneSpecialCharacter && <li>Password needs at least 1 special character (!, @, #, $, %, ^, &, ^, *)</li>}\n            {!conditions.containsNoSpace && <li>Password must not contain any space</li>}\n          </List>\n          :\n          <p>The password does not match</p>\n      }\n    </Container>\n  )\n}\n\nexport default HelpBox","export default __webpack_public_path__ + \"static/media/eye-solid.637d0a25.svg\";","export default __webpack_public_path__ + \"static/media/eye-closed-solid.977da11a.svg\";","import { useState } from 'react'\nimport styled from 'styled-components'\n\nimport HelpBox from './HelpBox'\n\nimport eye from '../images/eye-solid.svg'\nimport eye_closed from '../images/eye-closed-solid.svg'\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  margin: 10px 0 5px 0;\n  position: relative;\n`;\n\nconst InputBox = styled.input`\n  padding: 10px;\n  border: ${\n    props => props.status === 'none' ? \n      '1px solid transparent' \n      : props.status === 'valid' ?\n        '1px solid #2DC01B'\n        :\n        '1px solid red'\n  };\n  ::placeholder{\n    font-weight: 300;\n  }\n  :focus{\n    outline: none;\n    & + .underline{\n      opacity: 1;\n      width: 100%;\n    }\n  }\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nconst Underline = styled.span`\n  display: block;\n  height: 2px;\n  opacity: 0;\n  width: 0%;\n`;\n\nfunction Input({ originalType, placeholder, value, saveInput, emailRegex, passwordRegex, inputPurpose, password1 }) {\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false)\n  const [inputType, setInputType] = useState(originalType)\n  const [borderType, setBorderType] = useState('none')\n  const [displayHelpbox, setDisplayHelpbox] = useState(false)\n  const [passwordConditions, setPasswordConditions] = useState({\n    hasEnoughCharacter: false,\n    hasOneUpperCase: false,\n    hasOneLowerCase: false,\n    hasOneDigit: false,\n    hasOneSpecialCharacter: false,\n    containsNoSpace: false\n  })\n   \n  const enoughCharacterRegex = /^.{8,}/\n  const oneUpperCaseRegex = /[A-Z]/\n  const oneLowerCaseRegex = /[a-z]/\n  const oneDigitRegex = /[0-9]/\n  const oneSpecialRegex = /[!@#$%^&^*]/\n  const containsSpaceRegex = /[\\s]/\n\n  const setHelpBox = (input) => {\n    if(enoughCharacterRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasEnoughCharacter: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasEnoughCharacter: false}\n      ))\n    }\n\n    if(oneUpperCaseRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneUpperCase: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneUpperCase: false}\n      ))\n    }\n\n    if(oneLowerCaseRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneLowerCase: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneLowerCase: false}\n      ))\n    }\n\n    if(oneDigitRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneDigit: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneDigit: false}\n      ))\n    }\n\n    if(oneSpecialRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneSpecialCharacter: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneSpecialCharacter: false}\n      ))\n    }\n\n    if(containsSpaceRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        containsNoSpace: false}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        containsNoSpace: true}\n      ))\n    }\n  }\n\n  const setHelpboxVisibility = (input) => {\n    if(input === ''){\n      setDisplayHelpbox(false)\n    }else{\n      if(inputPurpose === 'password'){\n        if(passwordRegex.test(input)){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }else if(inputPurpose === \"email\"){\n        if(emailRegex.test(input)){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }else{\n        if(password1 === input){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }\n    }\n  }\n\n  const handlePasswordVisibility = () => {\n    if(inputType === 'text'){\n      setInputType('password')\n    }else if(inputType === 'password'){\n      setInputType('text')\n    }\n    setIsPasswordVisible(prevState => prevState = !prevState)\n  }\n\n  const setBorder = (regex, input) => {\n\n    if(inputPurpose !== 'confirm-password'){\n      if(input === ''){\n        setBorderType('none')\n      }else if(input !== '' && !regex.test(input)){\n        setBorderType('invalid')\n      }else if(input !== '' && regex.test(input)){\n        setBorderType('valid')\n      }\n    }else{\n      if(input === ''){\n        setBorderType('none')\n      }else if(input !== '' && password1 !== input){\n        setBorderType('invalid')\n      }else{\n        setBorderType('valid')\n      }\n    }\n  }\n\n  const handleOnChange = (input) => {\n    saveInput(input)\n\n    if(originalType === 'password'){\n      setBorder(passwordRegex, input)\n    }else{\n      setBorder(emailRegex, input)\n    }\n\n    setHelpBox(input)\n    setHelpboxVisibility(input)\n  }\n\n  return(\n    <Container className=\"inputContainer\">\n      <InputBox \n        type={inputType}\n        placeholder={placeholder}\n        autoComplete=\"off\"\n        value={value}\n        onChange={(text) => handleOnChange(text.target.value)}\n        status={borderType}\n      />\n      <Underline className=\"underline\"></Underline>\n      {originalType === 'password' &&\n        <Img onClick={() => handlePasswordVisibility()} src={isPasswordVisible ? eye : eye_closed} alt=\"Icon visible password\"/>\n      }\n      {displayHelpbox &&\n        <HelpBox \n          type={inputPurpose}\n          conditions={passwordConditions}\n        />\n      }\n    </Container>\n  )\n}\n\nexport default Input","import styled from 'styled-components'\n\nconst Text = styled.h2`\n  font-size: 22px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin: 0 0 5px 0;\n  text-align: center;\n`;\n\nfunction Title({value}) {\n  return(\n    <Text>{value}</Text>\n  )\n}\n\nexport default Title","import styled from 'styled-components'\n\nconst Button = styled.button`\n  border-radius: 5px;\n  margin: 10px 0 20px 0;\n  padding: 5px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nfunction SubmitButton({ value, type }) {\n  return(\n      <Button\n        className=\"submit-button\" \n        type={type}\n      >\n        {value}\n      </Button>\n  )\n}\n\nexport default SubmitButton","export default __webpack_public_path__ + \"static/media/chevron-right-black.e32c85b2.svg\";","export default __webpack_public_path__ + \"static/media/chevron-right-white.0c61e753.svg\";","import { useState } from 'react'\nimport styled from 'styled-components'\nimport Input from './Components/Input'\nimport Title from './Components/Title'\nimport SubmitButton from './Components/SubmitButton'\nimport arrow_right_black from './images/chevron-right-black.svg'\nimport arrow_right_white from './images/chevron-right-white.svg'\n\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  transform: ${props => props.active ? 'translateX(60%)' : 'translateX(-130%)'};\n  opacity: ${props => props.active ? '1' : '0'};\n  visibility: ${props => props.active ? 'visible' : 'hidden'};\n`;\n\nconst PasswordLink = styled.a`\n  font-size: 12px;\n  align-self: flex-end;\n  margin-bottom: 10px\n`;\n\nconst ToSignUp = styled.div`\n  font-size: 14px;\n  padding: 4px 4px 4px 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  position: relative;\n  align-self: flex-end;\n  cursor: pointer;\n  transition: box-shadow .2s linear;\n`;\n\nconst RightArrow = styled.img`\n  transform: translateX(0) \n`;\n\nconst ButtonText = styled.p`\n  font-size: 16;\n  margin: 0 5px 0 0;\n`;\n\nfunction Signin({ active, handleConnectDisplayChange, handleOnSubmitSignin, theme, emailRegex, passwordRegex }) {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  return(\n    <Wrapper className=\"form\" active={active}>\n      <Title value=\"Sign In\" />\n      <Input \n        originalType=\"text\"\n        inputPurpose=\"email\"\n        placeholder=\"Email\"\n        autoComplete=\"off\"\n        value={email}\n        saveInput={setEmail}\n        emailRegex={emailRegex}\n      />\n      <Input\n        originalType=\"password\"\n        inputPurpose=\"password\"\n        placeholder=\"Password\"\n        autoComplete=\"off\"\n        value={password}\n        saveInput={setPassword}\n        passwordRegex={passwordRegex}\n      />\n      <PasswordLink href=\"#\">Forgot your password ?</PasswordLink>\n      <SubmitButton value='Confirm' type=\"submit\" onClick={() => handleOnSubmitSignin(email, password)}/>\n      <ToSignUp className=\"navButton\" onClick={() => handleConnectDisplayChange()}>\n        <ButtonText >Sign Up</ButtonText>\n        <RightArrow src={theme === 'light' ? arrow_right_black : arrow_right_white} alt=\"Icon to SignUp\" />\n      </ToSignUp>\n    </Wrapper>\n  )\n}\n\nexport default Signin","export default __webpack_public_path__ + \"static/media/chevron-left-black.8e8852b8.svg\";","export default __webpack_public_path__ + \"static/media/chevron-left-white.65578f22.svg\";","import { useState } from 'react'\n\nimport styled from 'styled-components'\n\nimport Input from './Components/Input'\nimport Title from './Components/Title'\nimport SubmitButton from './Components/SubmitButton'\nimport arrow_left_black from './images/chevron-left-black.svg'\nimport arrow_left_white from './images/chevron-left-white.svg'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  transform: ${props => props.active ? 'translateX(-40%)' : 'translateX(130%)'};\n  opacity: ${props => props.active ? '1' : '0'};\n  visibility: ${props => props.active ? 'visible' : 'hidden'};\n`;\n\nconst ToSignIn = styled.div`\n  font-size: 14px;\n  padding: 4px 6px 4px 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  position: relative;\n  background-color: #fff;\n  align-self: flex-start;\n  cursor: pointer;\n  transition: box-shadow .2s linear;\n`;\n\nconst LeftArrow = styled.img`\n  transform: translateX(0) \n`;\n\nconst ButtonText = styled.p`\n  font-size: 16;\n  margin: 0 0 0 5px;\n`;\n\nfunction Signup({ active, handleConnectDisplayChange, handleOnSubmitSignup, theme, emailRegex, passwordRegex }) {\n\n  const [email, setEmail] = useState('')\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n\n\n  return(\n    <Container className=\"form\" active={active}>\n      <Title value=\"Sign Up\" />\n        <Input \n          originalType=\"text\"\n          inputPurpose=\"email\"\n          placeholder=\"Email\"\n          autoComplete=\"off\"\n          value={email}\n          saveInput={setEmail}\n          emailRegex={emailRegex}\n        />\n        <Input\n          originalType=\"password\"\n          inputPurpose=\"password\"\n          placeholder=\"Password\"\n          autoComplete=\"off\"\n          value={password1}\n          saveInput={setPassword1}\n          passwordRegex={passwordRegex}\n        />\n        <Input \n          originalType=\"password\"\n          inputPurpose=\"confirm-password\"\n          placeholder=\"Confirm password\"\n          autoComplete=\"off\"\n          value={password2}\n          saveInput={setPassword2}\n          passwordRegex={passwordRegex}\n          password1={password1}\n        />\n      <SubmitButton value='Confirm' type=\"submit\" onClick={() => handleOnSubmitSignup(email, password1, password2)}/>\n      <ToSignIn className=\"navButton\" onClick={() => handleConnectDisplayChange()}>\n        <LeftArrow src={theme === 'light' ? arrow_left_black : arrow_left_white} alt=\"Icon link to SignIn\" />\n        <ButtonText>Sign In</ButtonText>\n      </ToSignIn>\n    </Container>\n  )\n}\n\nexport default Signup","export default __webpack_public_path__ + \"static/media/cloud-moon-solid.9d38ca39.svg\";","export default __webpack_public_path__ + \"static/media/sun-solid.78cf9218.svg\";","import React, { useState } from \"react\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Components/GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./Components/Themes\"\n\nimport Signin from './Signin'\nimport Signup from './Signup'\n\nimport moon from './images/cloud-moon-solid.svg'\nimport sun from './images/sun-solid.svg'\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  box-shadow: none;\n  padding: 0 10px\n`;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: calc(100vh - 50px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: none;\n  position: relative;\n  overflow-x: hidden;\n`;\n\nconst ModuleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ThemeToggler = styled.button`\n  border-radius: 50%;\n  padding: 5px;\n  border: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 20;\n`;\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [connectDisplay, setConnectDisplay] = useState('signin')\n  const [registeredUser, setRegisteredUser] = useState({\n    email: '',\n    password: ''\n  })\n\n  const emailRegex = /^[a-zA-Z0-9.-]{2,20}@([a-zA-Z0-9]{2,15})+(\\.[a-zA-Z]{2,3})+((\\.[a-zA-Z]{2,3})?)+$/\n  const passwordRegex = /^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&^*])(?!.*[\\s])(?!.*[<>]).*$/\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  const handleConnectDisplayChange = () => {\n    connectDisplay === 'signin' \n    ? setConnectDisplay('signup')\n    : setConnectDisplay('signin') \n  }\n\n  const checkInputValidity = (regex, input) => {\n    return regex.test(input);\n  }\n\n  const checkPasswordConformity = (password1, password2) => {\n    if(checkInputValidity(passwordRegex, password1)){\n      if(password1 === password2){\n        return true\n      }else{\n        return false\n      }\n    }else{\n      return false\n    }\n  }\n\n  const registerUser = (email, password) =>{\n    setRegisteredUser({\n      email: email,\n      password: password\n    })\n  }\n\n  const handleOnSubmitSignup = (email, password1, password2) => {\n    if(checkPasswordConformity(password1, password2) && checkInputValidity(emailRegex, email)){\n      registerUser(email, password2)\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  const handleOnSubmitSignin = (email, password) => {\n    if(checkInputValidity(passwordRegex, password) && checkInputValidity(emailRegex, email)){\n      if(email === registeredUser.email && password === registeredUser.password){\n        console.log('Nice, you are logged in')\n      }else{\n        console.log('It seems your email or password do not match what we have on database');\n      }\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  return (\n     <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <GlobalStyles/>\n        {/* <Header>\n          <ThemeToggler className=\"theme-toggler\" onClick={themeToggler}>\n            <img src={theme === 'light' ? moon : sun} alt=\"Toggle theme icon\" />\n          </ThemeToggler>\n        </Header> */}\n        <ThemeToggler className=\"theme-toggler\" onClick={themeToggler}>\n            <img src={theme === 'light' ? moon : sun} alt=\"Toggle theme icon\" />\n        </ThemeToggler>\n        <Container>\n          <ModuleContainer>\n            <Signin \n              handleOnSubmitSignin={handleOnSubmitSignin} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signin' ? true : false}\n              theme={theme}\n              emailRegex={emailRegex}\n              passwordRegex={passwordRegex}\n            />\n            <Signup \n              registerUser={registerUser} \n              handleOnSubmitSignup={handleOnSubmitSignup} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signup' ? true : false}\n              theme={theme}\n              emailRegex={emailRegex}\n              passwordRegex={passwordRegex}\n            />\n          </ModuleContainer>\n        </Container>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}