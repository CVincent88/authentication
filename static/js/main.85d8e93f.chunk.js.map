{"version":3,"sources":["Components/GlobalStyle.js","Components/Themes.js","Components/HelpBox.js","images/eye-solid.svg","images/eye-closed-solid.svg","Components/Input.js","Components/Title.js","Components/SubmitButton.js","images/chevron-right-black.svg","images/chevron-right-white.svg","Signin.js","images/chevron-left-black.svg","images/chevron-left-white.svg","Signup.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","button","background","shadow","border","input","borderColor","hover","backgroundColor","text","body","form","lightTheme","toggleBorder","darkTheme","Container","styled","div","List","ul","HelpBox","type","conditions","hasEnoughCharacter","hasOneUpperCase","hasOneLowerCase","hasOneDigit","hasOneSpecialCharacter","containsNoSpace","InputBox","props","status","Img","img","Underline","span","Input","originalType","placeholder","value","saveInput","emailRegex","passwordRegex","inputPurpose","password1","useState","isPasswordVisible","setIsPasswordVisible","inputType","setInputType","borderType","setBorderType","displayHelpbox","setDisplayHelpbox","passwordConditions","setPasswordConditions","enoughCharacterRegex","oneUpperCaseRegex","oneLowerCaseRegex","oneDigitRegex","oneSpecialRegex","containsSpaceRegex","setBorder","regex","test","handleOnChange","prevState","setHelpBox","setHelpboxVisibility","className","autoComplete","onChange","target","onClick","src","eye","eye_closed","alt","active","Text","h2","Title","Button","SubmitButton","Wrapper","ToSignUp","RightArrow","ButtonText","p","Signin","handleConnectDisplayChange","handleOnSubmitSignin","email","setEmail","password","setPassword","href","arrow_right_black","arrow_right_white","ToSignIn","LeftArrow","Signup","handleOnSubmitSignup","setPassword1","password2","setPassword2","arrow_left_black","arrow_left_white","Header","ModuleContainer","App","setTheme","connectDisplay","setConnectDisplay","registeredUser","setRegisteredUser","checkInputValidity","registerUser","console","log","checkPasswordConformity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85d8e93f.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n\n  .button {\n    background-color: ${({ theme }) => theme.button.background};\n    transition: all 0.30s linear;\n      &:hover{\n      box-shadow: ${({ theme }) => theme.button.shadow};\n    }\n  }\n\n  .submit-button {\n    border: ${({ theme }) => theme.button.border};\n    color: ${({ theme }) => theme.input.borderColor};\n    background-color: ${({ theme }) => theme.button.background};\n    &:hover {\n      background-color: ${({ theme }) => theme.button.hover.backgroundColor};\n      color: ${({ theme }) => theme.button.hover.text}\n    }\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.30s linear;\n  }\n\n  .form {\n    box-shadow: ${({ theme }) => theme.form.shadow};\n    transition: all .3s linear;\n  }\n\n  .underline {\n    background-color: ${({ theme }) => theme.input.borderColor};\n  }\n\n  \n  input {\n    background-color: ${({ theme }) => theme.input.background};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.30s linear;\n    position: relative;\n    ::placeholder{\n      color: ${({ theme }) => theme.text};\n      font-weight: 300;\n      transition: color 0.30s linear;\n    }\n  }\n  `;","export const lightTheme = {\n  body: '#FFF',\n  text: '#363537',\n  toggleBorder: '#FFF',\n  background: '#363537',\n  button: {\n    background: '#FFF',\n    shadow: '0 0 3px rgba(0, 0, 0, .7)',\n    border: '1px solid #363537',\n    hover: {\n      text: '#FFF',\n      backgroundColor: '#363537',\n    }\n  },\n  form: {\n    shadow: '0 0 7px #7f807f',\n  },\n  input: {\n    borderColor: '#363537',\n    shadow: '0 0 5px #363537',\n    background: '#d3d3d3'\n  }\n}\n\nexport const darkTheme = {\n  body: '#363537',\n  text: '#FAFAFA',\n  toggleBorder: '#6B8096',\n  background: '#999',\n  button: {\n    background: '#363537',\n    shadow: '0 0 3px rgba(0, 0, 0, 1)',\n    border: '1px solid #00fbff',\n    hover: {\n      text: '#363537',\n      backgroundColor: '#00fbff',\n    }\n  },\n  form: {\n    shadow: '0px 0 7px #000',\n  },\n  input: {\n    borderColor: '#00fbff',\n    shadow: '0 0 5px rgba(0, 251, 255, 1)',\n    background: '#414142'\n  }\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  font-size: 12px;\n  padding: 5px;\n  transform: translateX(100%);\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: 1px solid black;\n  background-color: #fff;\n  z-index: 10;\n`;\n\nconst List = styled.ul`\n  margin: 0;\n  padding-left: 15px\n`;\n\nfunction HelpBox({ type, conditions }) {\n\n  return(\n    <Container >\n      {type === 'email' ?\n        <p>This must be a valid email address</p>\n        : \n        type === 'password' ?\n          <List>\n            {!conditions.hasEnoughCharacter && <li>Password is too short (minimum is 8 characters)</li>}\n            {!conditions.hasOneUpperCase && <li>Password needs at least one upper case letter</li>}\n            {!conditions.hasOneLowerCase && <li>Password needs at least one lower case letter</li>}\n            {!conditions.hasOneDigit && <li>Password needs at least 1 number</li>}\n            {!conditions.hasOneSpecialCharacter && <li>Password needs at least 1 special character (!, @, #, $, %, ^, &, ^, *)</li>}\n            {!conditions.containsNoSpace && <li>Password must not contain any space</li>}\n          </List>\n          :\n          <p>The password does not match</p>\n      }\n    </Container>\n  )\n}\n\nexport default HelpBox","export default __webpack_public_path__ + \"static/media/eye-solid.637d0a25.svg\";","export default __webpack_public_path__ + \"static/media/eye-closed-solid.977da11a.svg\";","import { useState } from 'react'\nimport styled from 'styled-components'\n\nimport HelpBox from './HelpBox'\n\nimport eye from '../images/eye-solid.svg'\nimport eye_closed from '../images/eye-closed-solid.svg'\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  margin: 10px 0 5px 0;\n  position: relative;\n`;\n\nconst InputBox = styled.input`\n  padding: 10px;\n  border: ${\n    props => props.status === 'none' ? \n      '1px solid transparent' \n      : props.status === 'valid' ?\n        '1px solid green'\n        :\n        '1px solid red'\n  };\n  :focus{\n    outline: none;\n    & + .underline{\n      opacity: 1;\n      width: 100%;\n    }\n  }\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nconst Underline = styled.span`\n  display: block;\n  height: 2px;\n  opacity: 0;\n  width: 0%;\n  transition: all .3s linear\n`;\n\nfunction Input({ originalType, placeholder, value, saveInput, emailRegex, passwordRegex, inputPurpose, password1 }) {\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false)\n  const [inputType, setInputType] = useState(originalType)\n  const [borderType, setBorderType] = useState('none')\n  const [displayHelpbox, setDisplayHelpbox] = useState(false)\n  const [passwordConditions, setPasswordConditions] = useState({\n    hasEnoughCharacter: false,\n    hasOneUpperCase: false,\n    hasOneLowerCase: false,\n    hasOneDigit: false,\n    hasOneSpecialCharacter: false,\n    containsNoSpace: false\n  })\n   \n  const enoughCharacterRegex = /^.{8,}/\n  const oneUpperCaseRegex = /[A-Z]/\n  const oneLowerCaseRegex = /[a-z]/\n  const oneDigitRegex = /[0-9]/\n  const oneSpecialRegex = /[!@#$%^&^*]/\n  const containsSpaceRegex = /[\\s]/\n\n  const setHelpBox = (input) => {\n    if(enoughCharacterRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasEnoughCharacter: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasEnoughCharacter: false}\n      ))\n    }\n\n    if(oneUpperCaseRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneUpperCase: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneUpperCase: false}\n      ))\n    }\n\n    if(oneLowerCaseRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneLowerCase: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneLowerCase: false}\n      ))\n    }\n\n    if(oneDigitRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneDigit: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneDigit: false}\n      ))\n    }\n\n    if(oneSpecialRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneSpecialCharacter: true}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        hasOneSpecialCharacter: false}\n      ))\n    }\n\n    if(containsSpaceRegex.test(input)){\n      setPasswordConditions(prevState => (\n        {...prevState,\n        containsNoSpace: false}\n      ))\n    }else{\n      setPasswordConditions(prevState => (\n        {...prevState,\n        containsNoSpace: true}\n      ))\n    }\n  }\n\n  const setHelpboxVisibility = (input) => {\n    if(input === ''){\n      setDisplayHelpbox(false)\n    }else{\n      if(inputPurpose === 'password'){\n        if(passwordRegex.test(input)){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }else if(inputPurpose === \"email\"){\n        if(emailRegex.test(input)){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }else{\n        if(password1 === input){\n          setDisplayHelpbox(false)\n        }else{\n          setDisplayHelpbox(true)\n        }\n      }\n    }\n  }\n\n  const handlePasswordVisibility = () => {\n    if(inputType === 'text'){\n      setInputType('password')\n    }else if(inputType === 'password'){\n      setInputType('text')\n    }\n    setIsPasswordVisible(prevState => prevState = !prevState)\n  }\n\n  const setBorder = (regex, input) => {\n\n    if(inputPurpose !== 'confirm-password'){\n      if(input === ''){\n        setBorderType('none')\n      }else if(input !== '' && !regex.test(input)){\n        setBorderType('invalid')\n      }else if(input !== '' && regex.test(input)){\n        setBorderType('valid')\n      }\n    }else{\n      if(input === ''){\n        setBorderType('none')\n      }else if(input !== '' && password1 !== input){\n        setBorderType('invalid')\n      }else{\n        setBorderType('valid')\n      }\n    }\n  }\n\n  const handleOnChange = (input) => {\n    saveInput(input)\n\n    if(originalType === 'password'){\n      setBorder(passwordRegex, input)\n    }else{\n      setBorder(emailRegex, input)\n    }\n\n    setHelpBox(input)\n    setHelpboxVisibility(input)\n  }\n\n  return(\n    <Container className=\"inputContainer\">\n      <InputBox \n        type={inputType}\n        placeholder={placeholder}\n        autoComplete=\"off\"\n        value={value}\n        onChange={(text) => handleOnChange(text.target.value)}\n        status={borderType}\n      />\n      <Underline className=\"underline\"></Underline>\n      {originalType === 'password' &&\n        <Img onClick={() => handlePasswordVisibility()} src={isPasswordVisible ? eye : eye_closed} alt=\"Icon visible password\"/>\n      }\n      {displayHelpbox &&\n        <HelpBox \n          active={displayHelpbox}\n          type={inputPurpose}\n          conditions={passwordConditions}\n        />\n      }\n    </Container>\n  )\n}\n\nexport default Input","import styled from 'styled-components'\n\nconst Text = styled.h2`\n  font-size: 22px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin: 0 0 5px 0;\n`;\n\nfunction Title({value}) {\n  return(\n    <Text>{value}</Text>\n  )\n}\n\nexport default Title","import styled from 'styled-components'\n\nconst Button = styled.button`\n  border-radius: 5px;\n  margin-top: 10px;\n  padding: 5px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nfunction SubmitButton({ value, type }) {\n  return(\n      <Button\n        className=\"submit-button\" \n        type={type}\n      >\n        {value}\n      </Button>\n  )\n}\n\nexport default SubmitButton","export default __webpack_public_path__ + \"static/media/chevron-right-black.e32c85b2.svg\";","export default __webpack_public_path__ + \"static/media/chevron-right-white.0c61e753.svg\";","import { useState } from 'react'\nimport styled from 'styled-components'\nimport Input from './Components/Input'\nimport Title from './Components/Title'\nimport SubmitButton from './Components/SubmitButton'\nimport arrow_right_black from './images/chevron-right-black.svg'\nimport arrow_right_white from './images/chevron-right-white.svg'\n\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  transform: ${props => props.active ? 'translateX(50%)' : 'translateX(-200px)'};\n  opacity: ${props => props.active ? '1' : '0'};\n`;\n\nconst ToSignUp = styled.div`\n  font-size: 14px;\n  padding: 4px 4px 4px 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  position: relative;\n  align-self: flex-end;\n  cursor: pointer;\n  margin-top: 10px;\n  transition: box-shadow .2s linear;\n`;\n\nconst RightArrow = styled.img`\n  transform: translateX(0) \n`;\n\nconst ButtonText = styled.p`\n  font-size: 16;\n  margin: 0 5px 0 0;\n`;\n\nfunction Signin({ active, handleConnectDisplayChange, handleOnSubmitSignin, theme, emailRegex, passwordRegex }) {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  return(\n    <Wrapper className=\"form\" active={active}>\n      <Title value=\"Sign In\" />\n      <Input \n        originalType=\"text\"\n        inputPurpose=\"email\"\n        placeholder=\"Email\"\n        autoComplete=\"off\"\n        value={email}\n        saveInput={setEmail}\n        emailRegex={emailRegex}\n      />\n      <Input\n        originalType=\"password\"\n        inputPurpose=\"password\"\n        placeholder=\"Password\"\n        autoComplete=\"off\"\n        value={password}\n        saveInput={setPassword}\n        passwordRegex={passwordRegex}\n      />\n      <a href=\"#\">Forgot your password ?</a>\n      <SubmitButton value='Confirm' type=\"submit\" onClick={() => handleOnSubmitSignin(email, password)}/>\n      <ToSignUp className=\"button\" onClick={() => handleConnectDisplayChange()}>\n        <ButtonText >Sign Up</ButtonText>\n        <RightArrow src={theme === 'light' ? arrow_right_black : arrow_right_white} alt=\"Icon to SignUp\" />\n      </ToSignUp>\n    </Wrapper>\n  )\n}\n\nexport default Signin","export default __webpack_public_path__ + \"static/media/chevron-left-black.8e8852b8.svg\";","export default __webpack_public_path__ + \"static/media/chevron-left-white.65578f22.svg\";","import { useState } from 'react'\n\nimport styled from 'styled-components'\n\nimport Input from './Components/Input'\nimport Title from './Components/Title'\nimport SubmitButton from './Components/SubmitButton'\nimport arrow_left_black from './images/chevron-left-black.svg'\nimport arrow_left_white from './images/chevron-left-white.svg'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  transform: ${props => props.active ? 'translateX(-50%)' : 'translateX(200px)'};\n  opacity: ${props => props.active ? '1' : '0'};\n`;\n\nconst ToSignIn = styled.div`\n  font-size: 14px;\n  padding: 4px 6px 4px 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  position: relative;\n  background-color: #fff;\n  align-self: flex-start;\n  cursor: pointer;\n  margin-top: 10px;\n  transition: box-shadow .2s linear;\n`;\n\nconst LeftArrow = styled.img`\n  transform: translateX(0) \n`;\n\nconst ButtonText = styled.p`\n  font-size: 16;\n  margin: 0 0 0 5px;\n`;\n\nfunction Signup({ active, handleConnectDisplayChange, handleOnSubmitSignup, theme, emailRegex, passwordRegex }) {\n\n  const [email, setEmail] = useState('')\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n\n\n  return(\n    <Container className=\"form\" active={active}>\n      <Title value=\"Create your account\" />\n        <Input \n          originalType=\"text\"\n          inputPurpose=\"email\"\n          placeholder=\"email\"\n          autoComplete=\"off\"\n          value={email}\n          saveInput={setEmail}\n          emailRegex={emailRegex}\n        />\n        <Input\n          originalType=\"password\"\n          inputPurpose=\"password\"\n          placeholder=\"Password\"\n          autoComplete=\"off\"\n          value={password1}\n          saveInput={setPassword1}\n          passwordRegex={passwordRegex}\n        />\n        <Input \n          originalType=\"password\"\n          inputPurpose=\"confirm-password\"\n          placeholder=\"Confirm password\"\n          autoComplete=\"off\"\n          value={password2}\n          saveInput={setPassword2}\n          passwordRegex={passwordRegex}\n          password1={password1}\n        />\n      <SubmitButton value='Confirm' type=\"submit\" onClick={() => handleOnSubmitSignup(email, password1, password2)}/>\n      <ToSignIn className=\"button\" onClick={() => handleConnectDisplayChange()}>\n        <LeftArrow src={theme === 'light' ? arrow_left_black : arrow_left_white} alt=\"Icon link to SignIn\" />\n        <ButtonText>Sign In</ButtonText>\n      </ToSignIn>\n    </Container>\n  )\n}\n\nexport default Signup","import React, { useState } from \"react\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Components/GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./Components/Themes\"\n\nimport Signin from './Signin'\nimport Signup from './Signup'\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  ${'' /* height: 50px; */}\n  box-shadow: none;\n  padding: 0 10px\n`;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: calc(100vh - 50px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: none;\n  position: relative;\n  overflow-x: hidden;\n`;\n\nconst ModuleContainer = styled.div`\n  ${'' /* width: 50vw; */}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: none;\n`;\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [connectDisplay, setConnectDisplay] = useState('signin')\n  const [registeredUser, setRegisteredUser] = useState({\n    email: '',\n    password: ''\n  })\n\n  const emailRegex = /^[a-zA-Z0-9.-]{2,20}@([a-zA-Z0-9]{2,15})+(\\.[a-zA-Z]{2,3})+((\\.[a-zA-Z]{2,3})?)+$/\n  const passwordRegex = /^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&^*])(?!.*[\\s])(?!.*[<>]).*$/\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  const handleConnectDisplayChange = () => {\n    connectDisplay === 'signin' \n    ? setConnectDisplay('signup')\n    : setConnectDisplay('signin') \n  }\n\n  const checkInputValidity = (regex, input) => {\n    return regex.test(input);\n  }\n\n  const checkPasswordConformity = (password1, password2) => {\n    if(checkInputValidity(passwordRegex, password1)){\n      if(password1 === password2){\n        return true\n      }else{\n        return false\n      }\n    }else{\n      return false\n    }\n  }\n\n  const registerUser = (email, password) =>{\n    setRegisteredUser({\n      email: email,\n      password: password\n    })\n  }\n\n  const handleOnSubmitSignup = (email, password1, password2) => {\n    if(checkPasswordConformity(password1, password2) && checkInputValidity(emailRegex, email)){\n      registerUser(email, password2)\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  const handleOnSubmitSignin = (email, password) => {\n    if(checkInputValidity(passwordRegex, password) && checkInputValidity(emailRegex, email)){\n      if(email === registeredUser.email && password === registeredUser.password){\n        console.log('Nice, you are logged in')\n      }else{\n        console.log('It seems your email or password do not match what we have on database');\n      }\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  return (\n     <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <GlobalStyles/>\n        <Header>\n          <button onClick={themeToggler}>Switch Theme</button>\n        </Header>\n        <Container>\n          <ModuleContainer>\n            <Signin \n              handleOnSubmitSignin={handleOnSubmitSignin} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signin' ? true : false}\n              theme={theme}\n              emailRegex={emailRegex}\n              passwordRegex={passwordRegex}\n            />\n            <Signup \n              registerUser={registerUser} \n              handleOnSubmitSignup={handleOnSubmitSignup} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signup' ? true : false}\n              theme={theme}\n              emailRegex={emailRegex}\n              passwordRegex={passwordRegex}\n            />\n          </ModuleContainer>\n        </Container>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}