{"version":3,"sources":["Components/GlobalStyle.js","Components/Themes.js","images/eye-solid.svg","images/eye-closed-solid.svg","Signin.js","Signup.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","form","shadow","input","borderColor","background","lightTheme","toggleBorder","darkTheme","Wrapper","styled","div","props","active","Title","span","InputContainer","Input","Img","img","Underline","Button","button","Signin","handleConnectDisplayChange","handleOnSubmitSignin","useState","isPasswordVisible","setIsPasswordVisible","email","setEmail","password","setPassword","className","type","placeholder","value","onChange","target","onClick","prevState","src","eye_closed","eye","alt","Container","Signup","handleOnSubmitSignup","isPassword1Visible","setIsPassword1Visible","isPassword2Visible","setIsPassword2Visible","password1","setPassword1","password2","setPassword2","handlePasswordVisibility","autoComplete","Header","ModuleContainer","App","setTheme","connectDisplay","setConnectDisplay","registeredUser","setRegisteredUser","emailRegex","passwordRegex","checkInputValidity","regex","test","registerUser","console","log","checkPasswordConformity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d60567f4.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-size: 22px;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.30s linear;\n  }\n\n  .form {\n    box-shadow: ${({ theme }) => theme.form.shadow};\n    transition: all .3s linear;\n  }\n\n  .underline {\n    background-color: ${({ theme }) => theme.input.borderColor};\n  }\n\n  \n  input {\n    background-color: ${({ theme }) => theme.input.background};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.30s linear;\n    position: relative;\n    ::placeholder{\n      color: ${({ theme }) => theme.text};\n      font-weight: 300;\n    }\n  }\n  `;","export const lightTheme = {\n  body: '#FFF',\n  text: '#363537',\n  toggleBorder: '#FFF',\n  background: '#363537',\n  form: {\n    shadow: '0 0 7px #7f807f',\n  },\n  input: {\n    borderColor: '#363537',\n    shadow: '0 0 5px #363537',\n    background: '#d3d3d3'\n  }\n}\n\nexport const darkTheme = {\n  body: '#363537',\n  text: '#FAFAFA',\n  toggleBorder: '#6B8096',\n  background: '#999',\n  form: {\n    shadow: '0px 0 7px #000',\n  },\n  input: {\n    borderColor: '#00fbff',\n    shadow: '0 0 5px rgba(0, 251, 255, 1)',\n    background: '#414142'\n  }\n}\n","export default __webpack_public_path__ + \"static/media/eye-solid.637d0a25.svg\";","export default __webpack_public_path__ + \"static/media/eye-closed-solid.977da11a.svg\";","import { useState } from 'react'\n\nimport styled from 'styled-components'\nimport eye from './images/eye-solid.svg'\nimport eye_closed from './images/eye-closed-solid.svg'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  height: 50vh;\n  min-height: 400px;\n  max-height: 500px;\n  transform: ${props => props.active ? 'translateX(50%)' : 'translateX(-200px)'};\n  opacity: ${props => props.active ? '1' : '0'};\n`;\n\nconst Title = styled.span`\n  font-weight: 600;\n  letter-spacing: 1px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  margin-top: 10px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: none;\n  :focus{\n    outline: none;\n    & + .underline{\n      opacity: 1;\n      width: 100%;\n    }\n  }\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nconst Underline = styled.span`\n  display: block;\n  height: 2px;\n  opacity: 0;\n  width: 0%;\n  transition: all .3s linear\n`;\n\nconst Button = styled.button`\n  margin-top: 10px;\n  padding: 5px;\n  font-size: 14px;\n`;\n\nfunction Signin({ active, handleConnectDisplayChange, handleOnSubmitSignin }) {\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false)\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handlePasswordVisibility = () => {\n    setIsPasswordVisible(prevState => prevState = !prevState)\n  }\n\n  return(\n    <Wrapper className=\"form\" active={active}>\n      <Title>Sign In</Title>\n      <InputContainer className=\"inputContainer\">\n        <Input \n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(text) => setEmail(text.target.value)}\n        />\n        <Underline className=\"underline\"></Underline>\n      </InputContainer>\n      <InputContainer >\n        <Input \n          type={isPasswordVisible ? \"text\" : \"password\"}\n          placeholder=\"Password\"\n          value={password}\n          onChange={(text) => setPassword(text.target.value)}\n        />\n        <Underline className=\"underline\"></Underline>\n        <Img onClick={() => handlePasswordVisibility()} src={isPasswordVisible ? eye_closed : eye} alt=\"Logo view password\"/>\n      </InputContainer>\n      <Button \n        onClick={() => handleOnSubmitSignin(email, password)} \n        type=\"submit\" \n      >\n        Submit\n      </Button>\n      <Button onClick={() => handleConnectDisplayChange()}>\n        Sign Up\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default Signin","import { useState } from 'react'\n\nimport styled from 'styled-components'\nimport eye from './images/eye-solid.svg'\nimport eye_closed from './images/eye-closed-solid.svg'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  padding: 20px;\n  height: 50vh;\n  min-height: 400px;\n  max-height: 500px;\n  transform: ${props => props.active ? 'translateX(-50%)' : 'translateX(200px)'};\n  opacity: ${props => props.active ? '1' : '0'};\n`;\n\nconst Title = styled.span`\n  font-weight: 600;\n  letter-spacing: 1px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  margin-top: 10px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border: none;\n  :focus{\n    outline: none;\n    & + .underline{\n      opacity: 1;\n      width: 100%;\n    }\n  }\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nconst Underline = styled.span`\n  display: block;\n  height: 2px;\n  opacity: 0;\n  width: 0%;\n  transition: all .3s linear\n`;\n\nconst Button = styled.button`\n  margin-top: 10px;\n  padding: 5px;\n  font-size: 14px;\n`;\n\nfunction Signup({ active, handleConnectDisplayChange, handleOnSubmitSignup }) {\n\n  const [isPassword1Visible, setIsPassword1Visible] = useState(false)\n  const [isPassword2Visible, setIsPassword2Visible] = useState(false)\n\n  const [email, setEmail] = useState('')\n  const [password1, setPassword1] = useState('')\n  const [password2, setPassword2] = useState('')\n\n  const handlePasswordVisibility = (password) => {\n    if(password === 1){\n      setIsPassword1Visible(prevState => prevState = !prevState)\n    }else{\n      setIsPassword2Visible(prevState => prevState = !prevState)\n    }\n  }\n\n  return(\n    <Container className=\"form\" active={active}>\n      <Title>Sign Up</Title>\n      <InputContainer className=\"inputContainer\">\n        <Input \n          type=\"text\"\n          placeholder=\"Email\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={(text) => setEmail(text.target.value)}\n        />\n        <Underline className=\"underline\"></Underline>\n      </InputContainer>\n      <InputContainer>\n        <Input \n          type={isPassword1Visible ? \"text\" : \"password\"}\n          placeholder=\"Password\"\n          autoComplete=\"off\"\n          value={password1}\n          onChange={(text) => setPassword1(text.target.value)}\n        />\n        <Underline className=\"underline\"></Underline>\n        <Img onClick={() => handlePasswordVisibility(1)} src={isPassword1Visible ? eye_closed : eye} alt=\"Logo view password\"/>\n      </InputContainer>\n      <InputContainer>\n        <Input \n          type={isPassword2Visible ? \"text\" : \"password\"}\n          placeholder=\"Password\"\n          autoComplete=\"off\"\n          value={password2}\n          onChange={(text) => setPassword2(text.target.value)}\n        />\n        <Underline className=\"underline\"></Underline>\n        <Img onClick={() => handlePasswordVisibility(2)} src={isPassword2Visible ? eye_closed : eye} alt=\"Logo view password\"/>\n      </InputContainer>\n      <Button onClick={() => handleOnSubmitSignup(email, password1, password2)} type=\"submit\">Submit</Button>\n      <Button onClick={() => handleConnectDisplayChange()}>\n        Sign In\n      </Button>\n    </Container>\n  )\n}\n\nexport default Signup","import React, { useState } from \"react\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Components/GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./Components/Themes\"\n\nimport Signin from './Signin'\nimport Signup from './Signup'\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  ${'' /* height: 50px; */}\n  box-shadow: none;\n  padding: 0 10px\n`;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: calc(100vh - 50px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: none;\n  position: relative;\n  overflow-x: hidden;\n`;\n\nconst Toggle = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nconst ModuleContainer = styled.div`\n  ${'' /* width: 50vw; */}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: none;\n`;\n\nconst Button = styled.button`\n  margin-top: 15px;\n`;\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [connectDisplay, setConnectDisplay] = useState('signin')\n  const [registeredUser, setRegisteredUser] = useState({\n    email: '',\n    password: ''\n  })\n\n  const emailRegex = /^[a-zA-Z0-9.-]{2,20}@([a-zA-Z0-9]{2,15})+(\\.[a-zA-Z]{2,3})+((\\.[a-zA-Z]{2,3})?)+$/\n  const passwordRegex = /^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&^*])(?!.*[\\s])(?!.*[<>]).*$/\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  const handleConnectDisplayChange = () => {\n    connectDisplay === 'signin' \n    ? setConnectDisplay('signup')\n    : setConnectDisplay('signin') \n  }\n\n  const checkInputValidity = (regex, input) => {\n    return regex.test(input);\n  }\n\n  const checkPasswordConformity = (password1, password2) => {\n    if(checkInputValidity(passwordRegex, password1)){\n      if(password1 === password2){\n        return true\n      }else{\n        return false\n      }\n    }else{\n      return false\n    }\n  }\n\n  const registerUser = (email, password) =>{\n    setRegisteredUser({\n      email: email,\n      password: password\n    })\n  }\n\n  const handleOnSubmitSignup = (email, password1, password2) => {\n    if(checkPasswordConformity(password1, password2) && checkInputValidity(emailRegex, email)){\n      registerUser(email, password2)\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  const handleOnSubmitSignin = (email, password) => {\n    if(checkInputValidity(passwordRegex, password) && checkInputValidity(emailRegex, email)){\n      if(email === registeredUser.email && password === registeredUser.password){\n        console.log('Nice, you are logged in')\n      }else{\n        console.log('It seems your email or password do not match what we have on database');\n      }\n    }else{\n      // Deal with credentials not conform\n      console.log('The credentials do not match the regex')\n    }\n  }\n\n  return (\n     <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <GlobalStyles/>\n        <Header>\n          <button onClick={themeToggler}>Switch Theme</button>\n        </Header>\n        <Container>\n          <ModuleContainer>\n            <Signin \n              handleOnSubmitSignin={handleOnSubmitSignin} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signin' ? true : false}\n            />\n            <Signup \n              registerUser={registerUser} \n              handleOnSubmitSignup={handleOnSubmitSignup} \n              handleConnectDisplayChange={handleConnectDisplayChange} \n              active={connectDisplay === 'signup' ? true : false}\n            />\n          </ModuleContainer>\n        </Container>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}